<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="10744"><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.18%)</title><rect x="0.0558%" y="197" width="0.1768%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="19"/><text x="0.3058%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.18%)</title><rect x="0.0558%" y="181" width="0.1768%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="19"/><text x="0.3058%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="0.1396%" y="165" width="0.0931%" height="15" fill="rgb(221,193,54)" fg:x="15" fg:w="10"/><text x="0.3896%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="0.2141%" y="149" width="0.0186%" height="15" fill="rgb(248,212,6)" fg:x="23" fg:w="2"/><text x="0.4641%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.33%)</title><rect x="0.0372%" y="213" width="0.3258%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="35"/><text x="0.2872%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="0.2327%" y="197" width="0.1303%" height="15" fill="rgb(232,128,0)" fg:x="25" fg:w="14"/><text x="0.4827%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="0.2327%" y="181" width="0.1303%" height="15" fill="rgb(207,160,47)" fg:x="25" fg:w="14"/><text x="0.4827%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="0.2978%" y="165" width="0.0652%" height="15" fill="rgb(228,23,34)" fg:x="32" fg:w="7"/><text x="0.5478%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="0.3258%" y="149" width="0.0372%" height="15" fill="rgb(218,30,26)" fg:x="35" fg:w="4"/><text x="0.5758%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.05%)</title><rect x="0.3630%" y="213" width="0.0465%" height="15" fill="rgb(220,122,19)" fg:x="39" fg:w="5"/><text x="0.6130%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="0.0093%" y="277" width="0.4375%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="47"/><text x="0.2593%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.44%)</title><rect x="0.0093%" y="261" width="0.4375%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="47"/><text x="0.2593%" y="271.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.44%)</title><rect x="0.0093%" y="245" width="0.4375%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="47"/><text x="0.2593%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="0.0093%" y="229" width="0.4375%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="47"/><text x="0.2593%" y="239.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (4 samples, 0.04%)</title><rect x="0.4095%" y="213" width="0.0372%" height="15" fill="rgb(217,207,13)" fg:x="44" fg:w="4"/><text x="0.6595%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.12%)</title><rect x="0.4747%" y="181" width="0.1210%" height="15" fill="rgb(231,73,38)" fg:x="51" fg:w="13"/><text x="0.7247%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="0.4840%" y="165" width="0.1117%" height="15" fill="rgb(225,20,46)" fg:x="52" fg:w="12"/><text x="0.7340%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="0.5305%" y="149" width="0.0652%" height="15" fill="rgb(210,31,41)" fg:x="57" fg:w="7"/><text x="0.7805%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="0.5771%" y="133" width="0.0186%" height="15" fill="rgb(221,200,47)" fg:x="62" fg:w="2"/><text x="0.8271%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.16%)</title><rect x="0.5957%" y="181" width="0.1582%" height="15" fill="rgb(226,26,5)" fg:x="64" fg:w="17"/><text x="0.8457%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.16%)</title><rect x="0.5957%" y="165" width="0.1582%" height="15" fill="rgb(249,33,26)" fg:x="64" fg:w="17"/><text x="0.8457%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="0.6422%" y="149" width="0.1117%" height="15" fill="rgb(235,183,28)" fg:x="69" fg:w="12"/><text x="0.8922%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.30%)</title><rect x="0.4654%" y="197" width="0.2978%" height="15" fill="rgb(221,5,38)" fg:x="50" fg:w="32"/><text x="0.7154%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.06%)</title><rect x="0.7632%" y="197" width="0.0558%" height="15" fill="rgb(247,18,42)" fg:x="82" fg:w="6"/><text x="1.0132%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.88%)</title><rect x="0.0093%" y="309" width="0.8842%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="95"/><text x="0.2593%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="0.0093%" y="293" width="0.8842%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="95"/><text x="0.2593%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.45%)</title><rect x="0.4468%" y="277" width="0.4468%" height="15" fill="rgb(225,111,53)" fg:x="48" fg:w="48"/><text x="0.6968%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="0.4468%" y="261" width="0.4468%" height="15" fill="rgb(238,160,17)" fg:x="48" fg:w="48"/><text x="0.6968%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="0.4468%" y="245" width="0.4468%" height="15" fill="rgb(214,148,48)" fg:x="48" fg:w="48"/><text x="0.6968%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="0.4468%" y="229" width="0.4468%" height="15" fill="rgb(232,36,49)" fg:x="48" fg:w="48"/><text x="0.6968%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="0.4468%" y="213" width="0.4468%" height="15" fill="rgb(209,103,24)" fg:x="48" fg:w="48"/><text x="0.6968%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (8 samples, 0.07%)</title><rect x="0.8191%" y="197" width="0.0745%" height="15" fill="rgb(229,88,8)" fg:x="88" fg:w="8"/><text x="1.0691%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (12 samples, 0.11%)</title><rect x="0.9308%" y="181" width="0.1117%" height="15" fill="rgb(213,181,19)" fg:x="100" fg:w="12"/><text x="1.1808%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="0.9401%" y="165" width="0.1024%" height="15" fill="rgb(254,191,54)" fg:x="101" fg:w="11"/><text x="1.1901%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.06%)</title><rect x="0.9866%" y="149" width="0.0558%" height="15" fill="rgb(241,83,37)" fg:x="106" fg:w="6"/><text x="1.2366%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.31%)</title><rect x="0.9308%" y="197" width="0.3071%" height="15" fill="rgb(233,36,39)" fg:x="100" fg:w="33"/><text x="1.1808%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (21 samples, 0.20%)</title><rect x="1.0424%" y="181" width="0.1955%" height="15" fill="rgb(226,3,54)" fg:x="112" fg:w="21"/><text x="1.2924%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.20%)</title><rect x="1.0424%" y="165" width="0.1955%" height="15" fill="rgb(245,192,40)" fg:x="112" fg:w="21"/><text x="1.2924%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="1.1262%" y="149" width="0.1117%" height="15" fill="rgb(238,167,29)" fg:x="121" fg:w="12"/><text x="1.3762%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="1.2193%" y="133" width="0.0186%" height="15" fill="rgb(232,182,51)" fg:x="131" fg:w="2"/><text x="1.4693%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.04%)</title><rect x="1.2379%" y="197" width="0.0372%" height="15" fill="rgb(231,60,39)" fg:x="133" fg:w="4"/><text x="1.4879%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="0.8935%" y="261" width="0.4468%" height="15" fill="rgb(208,69,12)" fg:x="96" fg:w="48"/><text x="1.1435%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="0.8935%" y="245" width="0.4468%" height="15" fill="rgb(235,93,37)" fg:x="96" fg:w="48"/><text x="1.1435%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="0.8935%" y="229" width="0.4468%" height="15" fill="rgb(213,116,39)" fg:x="96" fg:w="48"/><text x="1.1435%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="0.8935%" y="213" width="0.4468%" height="15" fill="rgb(222,207,29)" fg:x="96" fg:w="48"/><text x="1.1435%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.07%)</title><rect x="1.2751%" y="197" width="0.0652%" height="15" fill="rgb(206,96,30)" fg:x="137" fg:w="7"/><text x="1.5251%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (11 samples, 0.10%)</title><rect x="1.3775%" y="165" width="0.1024%" height="15" fill="rgb(218,138,4)" fg:x="148" fg:w="11"/><text x="1.6275%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="1.3775%" y="149" width="0.1024%" height="15" fill="rgb(250,191,14)" fg:x="148" fg:w="11"/><text x="1.6275%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="1.4147%" y="133" width="0.0652%" height="15" fill="rgb(239,60,40)" fg:x="152" fg:w="7"/><text x="1.6647%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="1.4520%" y="117" width="0.0279%" height="15" fill="rgb(206,27,48)" fg:x="156" fg:w="3"/><text x="1.7020%" y="127.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.34%)</title><rect x="1.3589%" y="181" width="0.3444%" height="15" fill="rgb(225,35,8)" fg:x="146" fg:w="37"/><text x="1.6089%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (24 samples, 0.22%)</title><rect x="1.4799%" y="165" width="0.2234%" height="15" fill="rgb(250,213,24)" fg:x="159" fg:w="24"/><text x="1.7299%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (23 samples, 0.21%)</title><rect x="1.4892%" y="149" width="0.2141%" height="15" fill="rgb(247,123,22)" fg:x="160" fg:w="23"/><text x="1.7392%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="1.5730%" y="133" width="0.1303%" height="15" fill="rgb(231,138,38)" fg:x="169" fg:w="14"/><text x="1.8230%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="1.6660%" y="117" width="0.0372%" height="15" fill="rgb(231,145,46)" fg:x="179" fg:w="4"/><text x="1.9160%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.07%)</title><rect x="1.7033%" y="181" width="0.0652%" height="15" fill="rgb(251,118,11)" fg:x="183" fg:w="7"/><text x="1.9533%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (191 samples, 1.78%)</title><rect x="0.0093%" y="341" width="1.7777%" height="15" fill="rgb(217,147,25)" fg:x="1" fg:w="191"/><text x="0.2593%" y="351.50">r..</text></g><g><title>rayon_core::registry::in_worker (191 samples, 1.78%)</title><rect x="0.0093%" y="325" width="1.7777%" height="15" fill="rgb(247,81,37)" fg:x="1" fg:w="191"/><text x="0.2593%" y="335.50">r..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (96 samples, 0.89%)</title><rect x="0.8935%" y="309" width="0.8935%" height="15" fill="rgb(209,12,38)" fg:x="96" fg:w="96"/><text x="1.1435%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.89%)</title><rect x="0.8935%" y="293" width="0.8935%" height="15" fill="rgb(227,1,9)" fg:x="96" fg:w="96"/><text x="1.1435%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.89%)</title><rect x="0.8935%" y="277" width="0.8935%" height="15" fill="rgb(248,47,43)" fg:x="96" fg:w="96"/><text x="1.1435%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.45%)</title><rect x="1.3403%" y="261" width="0.4468%" height="15" fill="rgb(221,10,30)" fg:x="144" fg:w="48"/><text x="1.5903%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="1.3403%" y="245" width="0.4468%" height="15" fill="rgb(210,229,1)" fg:x="144" fg:w="48"/><text x="1.5903%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="1.3403%" y="229" width="0.4468%" height="15" fill="rgb(222,148,37)" fg:x="144" fg:w="48"/><text x="1.5903%" y="239.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="1.3403%" y="213" width="0.4468%" height="15" fill="rgb(234,67,33)" fg:x="144" fg:w="48"/><text x="1.5903%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="1.3496%" y="197" width="0.4375%" height="15" fill="rgb(247,98,35)" fg:x="145" fg:w="47"/><text x="1.5996%" y="207.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (2 samples, 0.02%)</title><rect x="1.7684%" y="181" width="0.0186%" height="15" fill="rgb(247,138,52)" fg:x="190" fg:w="2"/><text x="2.0184%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.13%)</title><rect x="1.8243%" y="181" width="0.1303%" height="15" fill="rgb(213,79,30)" fg:x="196" fg:w="14"/><text x="2.0743%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="1.8336%" y="165" width="0.1210%" height="15" fill="rgb(246,177,23)" fg:x="197" fg:w="13"/><text x="2.0836%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="1.8615%" y="149" width="0.0931%" height="15" fill="rgb(230,62,27)" fg:x="200" fg:w="10"/><text x="2.1115%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.29%)</title><rect x="1.7964%" y="197" width="0.2885%" height="15" fill="rgb(216,154,8)" fg:x="193" fg:w="31"/><text x="2.0464%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="1.9546%" y="181" width="0.1303%" height="15" fill="rgb(244,35,45)" fg:x="210" fg:w="14"/><text x="2.2046%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="1.9546%" y="165" width="0.1303%" height="15" fill="rgb(251,115,12)" fg:x="210" fg:w="14"/><text x="2.2046%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="2.0104%" y="149" width="0.0745%" height="15" fill="rgb(240,54,50)" fg:x="216" fg:w="8"/><text x="2.2604%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.05%)</title><rect x="2.0383%" y="133" width="0.0465%" height="15" fill="rgb(233,84,52)" fg:x="219" fg:w="5"/><text x="2.2883%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="2.0849%" y="197" width="0.0745%" height="15" fill="rgb(207,117,47)" fg:x="224" fg:w="8"/><text x="2.3349%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="1.7964%" y="261" width="0.4468%" height="15" fill="rgb(249,43,39)" fg:x="193" fg:w="48"/><text x="2.0464%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="1.7964%" y="245" width="0.4468%" height="15" fill="rgb(209,38,44)" fg:x="193" fg:w="48"/><text x="2.0464%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="1.7964%" y="229" width="0.4468%" height="15" fill="rgb(236,212,23)" fg:x="193" fg:w="48"/><text x="2.0464%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="1.7964%" y="213" width="0.4468%" height="15" fill="rgb(242,79,21)" fg:x="193" fg:w="48"/><text x="2.0464%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.08%)</title><rect x="2.1593%" y="197" width="0.0838%" height="15" fill="rgb(211,96,35)" fg:x="232" fg:w="9"/><text x="2.4093%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.16%)</title><rect x="2.2803%" y="165" width="0.1582%" height="15" fill="rgb(253,215,40)" fg:x="245" fg:w="17"/><text x="2.5303%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.14%)</title><rect x="2.2990%" y="149" width="0.1396%" height="15" fill="rgb(211,81,21)" fg:x="247" fg:w="15"/><text x="2.5490%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="2.3362%" y="133" width="0.1024%" height="15" fill="rgb(208,190,38)" fg:x="251" fg:w="11"/><text x="2.5862%" y="143.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.32%)</title><rect x="2.2617%" y="181" width="0.3165%" height="15" fill="rgb(235,213,38)" fg:x="243" fg:w="34"/><text x="2.5117%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.14%)</title><rect x="2.4386%" y="165" width="0.1396%" height="15" fill="rgb(237,122,38)" fg:x="262" fg:w="15"/><text x="2.6886%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.14%)</title><rect x="2.4386%" y="149" width="0.1396%" height="15" fill="rgb(244,218,35)" fg:x="262" fg:w="15"/><text x="2.6886%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="2.4851%" y="133" width="0.0931%" height="15" fill="rgb(240,68,47)" fg:x="267" fg:w="10"/><text x="2.7351%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="2.5596%" y="117" width="0.0186%" height="15" fill="rgb(210,16,53)" fg:x="275" fg:w="2"/><text x="2.8096%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.06%)</title><rect x="2.5782%" y="181" width="0.0558%" height="15" fill="rgb(235,124,12)" fg:x="277" fg:w="6"/><text x="2.8282%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.88%)</title><rect x="1.7964%" y="293" width="0.8842%" height="15" fill="rgb(224,169,11)" fg:x="193" fg:w="95"/><text x="2.0464%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="1.7964%" y="277" width="0.8842%" height="15" fill="rgb(250,166,2)" fg:x="193" fg:w="95"/><text x="2.0464%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.44%)</title><rect x="2.2431%" y="261" width="0.4375%" height="15" fill="rgb(242,216,29)" fg:x="241" fg:w="47"/><text x="2.4931%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="2.2431%" y="245" width="0.4375%" height="15" fill="rgb(230,116,27)" fg:x="241" fg:w="47"/><text x="2.4931%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.44%)</title><rect x="2.2431%" y="229" width="0.4375%" height="15" fill="rgb(228,99,48)" fg:x="241" fg:w="47"/><text x="2.4931%" y="239.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.44%)</title><rect x="2.2431%" y="213" width="0.4375%" height="15" fill="rgb(253,11,6)" fg:x="241" fg:w="47"/><text x="2.4931%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="2.2431%" y="197" width="0.4375%" height="15" fill="rgb(247,143,39)" fg:x="241" fg:w="47"/><text x="2.4931%" y="207.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.05%)</title><rect x="2.6340%" y="181" width="0.0465%" height="15" fill="rgb(236,97,10)" fg:x="283" fg:w="5"/><text x="2.8840%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.15%)</title><rect x="2.6992%" y="165" width="0.1489%" height="15" fill="rgb(233,208,19)" fg:x="290" fg:w="16"/><text x="2.9492%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.15%)</title><rect x="2.6992%" y="149" width="0.1489%" height="15" fill="rgb(216,164,2)" fg:x="290" fg:w="16"/><text x="2.9492%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="2.7643%" y="133" width="0.0838%" height="15" fill="rgb(220,129,5)" fg:x="297" fg:w="9"/><text x="3.0143%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="2.8109%" y="117" width="0.0372%" height="15" fill="rgb(242,17,10)" fg:x="302" fg:w="4"/><text x="3.0609%" y="127.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.31%)</title><rect x="2.6899%" y="181" width="0.3071%" height="15" fill="rgb(242,107,0)" fg:x="289" fg:w="33"/><text x="2.9399%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.15%)</title><rect x="2.8481%" y="165" width="0.1489%" height="15" fill="rgb(251,28,31)" fg:x="306" fg:w="16"/><text x="3.0981%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.15%)</title><rect x="2.8481%" y="149" width="0.1489%" height="15" fill="rgb(233,223,10)" fg:x="306" fg:w="16"/><text x="3.0981%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="2.8853%" y="133" width="0.1117%" height="15" fill="rgb(215,21,27)" fg:x="310" fg:w="12"/><text x="3.1353%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="2.9691%" y="117" width="0.0279%" height="15" fill="rgb(232,23,21)" fg:x="319" fg:w="3"/><text x="3.2191%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.07%)</title><rect x="2.9970%" y="181" width="0.0652%" height="15" fill="rgb(244,5,23)" fg:x="322" fg:w="7"/><text x="3.2470%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="2.6806%" y="245" width="0.4468%" height="15" fill="rgb(226,81,46)" fg:x="288" fg:w="48"/><text x="2.9306%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="2.6806%" y="229" width="0.4468%" height="15" fill="rgb(247,70,30)" fg:x="288" fg:w="48"/><text x="2.9306%" y="239.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="2.6806%" y="213" width="0.4468%" height="15" fill="rgb(212,68,19)" fg:x="288" fg:w="48"/><text x="2.9306%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="2.6806%" y="197" width="0.4468%" height="15" fill="rgb(240,187,13)" fg:x="288" fg:w="48"/><text x="2.9306%" y="207.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.07%)</title><rect x="3.0622%" y="181" width="0.0652%" height="15" fill="rgb(223,113,26)" fg:x="329" fg:w="7"/><text x="3.3122%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.13%)</title><rect x="3.1552%" y="149" width="0.1303%" height="15" fill="rgb(206,192,2)" fg:x="339" fg:w="14"/><text x="3.4052%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="3.1646%" y="133" width="0.1210%" height="15" fill="rgb(241,108,4)" fg:x="340" fg:w="13"/><text x="3.4146%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="3.1925%" y="117" width="0.0931%" height="15" fill="rgb(247,173,49)" fg:x="343" fg:w="10"/><text x="3.4425%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.05%)</title><rect x="3.2390%" y="101" width="0.0465%" height="15" fill="rgb(224,114,35)" fg:x="348" fg:w="5"/><text x="3.4890%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.33%)</title><rect x="3.1366%" y="165" width="0.3258%" height="15" fill="rgb(245,159,27)" fg:x="337" fg:w="35"/><text x="3.3866%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.18%)</title><rect x="3.2856%" y="149" width="0.1768%" height="15" fill="rgb(245,172,44)" fg:x="353" fg:w="19"/><text x="3.5356%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.18%)</title><rect x="3.2856%" y="133" width="0.1768%" height="15" fill="rgb(236,23,11)" fg:x="353" fg:w="19"/><text x="3.5356%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="3.3414%" y="117" width="0.1210%" height="15" fill="rgb(205,117,38)" fg:x="359" fg:w="13"/><text x="3.5914%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="3.4345%" y="101" width="0.0279%" height="15" fill="rgb(237,72,25)" fg:x="369" fg:w="3"/><text x="3.6845%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.07%)</title><rect x="3.4624%" y="165" width="0.0652%" height="15" fill="rgb(244,70,9)" fg:x="372" fg:w="7"/><text x="3.7124%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (382 samples, 3.56%)</title><rect x="0.0093%" y="373" width="3.5555%" height="15" fill="rgb(217,125,39)" fg:x="1" fg:w="382"/><text x="0.2593%" y="383.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (382 samples, 3.56%)</title><rect x="0.0093%" y="357" width="3.5555%" height="15" fill="rgb(235,36,10)" fg:x="1" fg:w="382"/><text x="0.2593%" y="367.50">rayo..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (191 samples, 1.78%)</title><rect x="1.7870%" y="341" width="1.7777%" height="15" fill="rgb(251,123,47)" fg:x="192" fg:w="191"/><text x="2.0370%" y="351.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (191 samples, 1.78%)</title><rect x="1.7870%" y="325" width="1.7777%" height="15" fill="rgb(221,13,13)" fg:x="192" fg:w="191"/><text x="2.0370%" y="335.50">r..</text></g><g><title>rayon_core::registry::in_worker (190 samples, 1.77%)</title><rect x="1.7964%" y="309" width="1.7684%" height="15" fill="rgb(238,131,9)" fg:x="193" fg:w="190"/><text x="2.0464%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (95 samples, 0.88%)</title><rect x="2.6806%" y="293" width="0.8842%" height="15" fill="rgb(211,50,8)" fg:x="288" fg:w="95"/><text x="2.9306%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.88%)</title><rect x="2.6806%" y="277" width="0.8842%" height="15" fill="rgb(245,182,24)" fg:x="288" fg:w="95"/><text x="2.9306%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="2.6806%" y="261" width="0.8842%" height="15" fill="rgb(242,14,37)" fg:x="288" fg:w="95"/><text x="2.9306%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.44%)</title><rect x="3.1273%" y="245" width="0.4375%" height="15" fill="rgb(246,228,12)" fg:x="336" fg:w="47"/><text x="3.3773%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="3.1273%" y="229" width="0.4375%" height="15" fill="rgb(213,55,15)" fg:x="336" fg:w="47"/><text x="3.3773%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.44%)</title><rect x="3.1273%" y="213" width="0.4375%" height="15" fill="rgb(209,9,3)" fg:x="336" fg:w="47"/><text x="3.3773%" y="223.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.44%)</title><rect x="3.1273%" y="197" width="0.4375%" height="15" fill="rgb(230,59,30)" fg:x="336" fg:w="47"/><text x="3.3773%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="3.1273%" y="181" width="0.4375%" height="15" fill="rgb(209,121,21)" fg:x="336" fg:w="47"/><text x="3.3773%" y="191.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (4 samples, 0.04%)</title><rect x="3.5276%" y="165" width="0.0372%" height="15" fill="rgb(220,109,13)" fg:x="379" fg:w="4"/><text x="3.7776%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.5648%" y="309" width="0.0186%" height="15" fill="rgb(232,18,1)" fg:x="383" fg:w="2"/><text x="3.8148%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="3.5834%" y="261" width="0.0186%" height="15" fill="rgb(215,41,42)" fg:x="385" fg:w="2"/><text x="3.8334%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.5834%" y="245" width="0.0186%" height="15" fill="rgb(224,123,36)" fg:x="385" fg:w="2"/><text x="3.8334%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.05%)</title><rect x="3.5648%" y="341" width="0.0465%" height="15" fill="rgb(240,125,3)" fg:x="383" fg:w="5"/><text x="3.8148%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.05%)</title><rect x="3.5648%" y="325" width="0.0465%" height="15" fill="rgb(205,98,50)" fg:x="383" fg:w="5"/><text x="3.8148%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="3.5834%" y="309" width="0.0279%" height="15" fill="rgb(205,185,37)" fg:x="385" fg:w="3"/><text x="3.8334%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="3.5834%" y="293" width="0.0279%" height="15" fill="rgb(238,207,15)" fg:x="385" fg:w="3"/><text x="3.8334%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="3.5834%" y="277" width="0.0279%" height="15" fill="rgb(213,199,42)" fg:x="385" fg:w="3"/><text x="3.8334%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="3.5648%" y="373" width="0.0652%" height="15" fill="rgb(235,201,11)" fg:x="383" fg:w="7"/><text x="3.8148%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.07%)</title><rect x="3.5648%" y="357" width="0.0652%" height="15" fill="rgb(207,46,11)" fg:x="383" fg:w="7"/><text x="3.8148%" y="367.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (390 samples, 3.63%)</title><rect x="0.0093%" y="389" width="3.6299%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="390"/><text x="0.2593%" y="399.50">&lt;cor..</text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="3.6392%" y="341" width="0.0186%" height="15" fill="rgb(243,32,47)" fg:x="391" fg:w="2"/><text x="3.8892%" y="351.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (21 samples, 0.20%)</title><rect x="3.7323%" y="213" width="0.1955%" height="15" fill="rgb(247,202,23)" fg:x="401" fg:w="21"/><text x="3.9823%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.19%)</title><rect x="3.7416%" y="197" width="0.1862%" height="15" fill="rgb(219,102,11)" fg:x="402" fg:w="20"/><text x="3.9916%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="3.8161%" y="181" width="0.1117%" height="15" fill="rgb(243,110,44)" fg:x="410" fg:w="12"/><text x="4.0661%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="3.8999%" y="165" width="0.0279%" height="15" fill="rgb(222,74,54)" fg:x="419" fg:w="3"/><text x="4.1499%" y="175.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.32%)</title><rect x="3.6951%" y="229" width="0.3165%" height="15" fill="rgb(216,99,12)" fg:x="397" fg:w="34"/><text x="3.9451%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (9 samples, 0.08%)</title><rect x="3.9278%" y="213" width="0.0838%" height="15" fill="rgb(226,22,26)" fg:x="422" fg:w="9"/><text x="4.1778%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="3.9278%" y="197" width="0.0838%" height="15" fill="rgb(217,163,10)" fg:x="422" fg:w="9"/><text x="4.1778%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.06%)</title><rect x="3.9557%" y="181" width="0.0558%" height="15" fill="rgb(213,25,53)" fg:x="425" fg:w="6"/><text x="4.2057%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="3.9836%" y="165" width="0.0279%" height="15" fill="rgb(252,105,26)" fg:x="428" fg:w="3"/><text x="4.2336%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.05%)</title><rect x="4.0115%" y="229" width="0.0465%" height="15" fill="rgb(220,39,43)" fg:x="431" fg:w="5"/><text x="4.2615%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="3.6672%" y="293" width="0.4468%" height="15" fill="rgb(229,68,48)" fg:x="394" fg:w="48"/><text x="3.9172%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="3.6672%" y="277" width="0.4468%" height="15" fill="rgb(252,8,32)" fg:x="394" fg:w="48"/><text x="3.9172%" y="287.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="3.6672%" y="261" width="0.4468%" height="15" fill="rgb(223,20,43)" fg:x="394" fg:w="48"/><text x="3.9172%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="3.6672%" y="245" width="0.4468%" height="15" fill="rgb(229,81,49)" fg:x="394" fg:w="48"/><text x="3.9172%" y="255.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (6 samples, 0.06%)</title><rect x="4.0581%" y="229" width="0.0558%" height="15" fill="rgb(236,28,36)" fg:x="436" fg:w="6"/><text x="4.3081%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.12%)</title><rect x="4.1325%" y="197" width="0.1210%" height="15" fill="rgb(249,185,26)" fg:x="444" fg:w="13"/><text x="4.3825%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="4.1325%" y="181" width="0.1210%" height="15" fill="rgb(249,174,33)" fg:x="444" fg:w="13"/><text x="4.3825%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="4.1884%" y="165" width="0.0652%" height="15" fill="rgb(233,201,37)" fg:x="450" fg:w="7"/><text x="4.4384%" y="175.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.29%)</title><rect x="4.1232%" y="213" width="0.2885%" height="15" fill="rgb(221,78,26)" fg:x="443" fg:w="31"/><text x="4.3732%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.16%)</title><rect x="4.2535%" y="197" width="0.1582%" height="15" fill="rgb(250,127,30)" fg:x="457" fg:w="17"/><text x="4.5035%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.16%)</title><rect x="4.2535%" y="181" width="0.1582%" height="15" fill="rgb(230,49,44)" fg:x="457" fg:w="17"/><text x="4.5035%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="4.3001%" y="165" width="0.1117%" height="15" fill="rgb(229,67,23)" fg:x="462" fg:w="12"/><text x="4.5501%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="4.3745%" y="149" width="0.0372%" height="15" fill="rgb(249,83,47)" fg:x="470" fg:w="4"/><text x="4.6245%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="4.4118%" y="213" width="0.0745%" height="15" fill="rgb(215,43,3)" fg:x="474" fg:w="8"/><text x="4.6618%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.89%)</title><rect x="3.6579%" y="325" width="0.8935%" height="15" fill="rgb(238,154,13)" fg:x="393" fg:w="96"/><text x="3.9079%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="3.6672%" y="309" width="0.8842%" height="15" fill="rgb(219,56,2)" fg:x="394" fg:w="95"/><text x="3.9172%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.44%)</title><rect x="4.1139%" y="293" width="0.4375%" height="15" fill="rgb(233,0,4)" fg:x="442" fg:w="47"/><text x="4.3639%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="4.1139%" y="277" width="0.4375%" height="15" fill="rgb(235,30,7)" fg:x="442" fg:w="47"/><text x="4.3639%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.44%)</title><rect x="4.1139%" y="261" width="0.4375%" height="15" fill="rgb(250,79,13)" fg:x="442" fg:w="47"/><text x="4.3639%" y="271.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.44%)</title><rect x="4.1139%" y="245" width="0.4375%" height="15" fill="rgb(211,146,34)" fg:x="442" fg:w="47"/><text x="4.3639%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="4.1139%" y="229" width="0.4375%" height="15" fill="rgb(228,22,38)" fg:x="442" fg:w="47"/><text x="4.3639%" y="239.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.07%)</title><rect x="4.4862%" y="213" width="0.0652%" height="15" fill="rgb(235,168,5)" fg:x="482" fg:w="7"/><text x="4.7362%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (21 samples, 0.20%)</title><rect x="4.5607%" y="197" width="0.1955%" height="15" fill="rgb(221,155,16)" fg:x="490" fg:w="21"/><text x="4.8107%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.14%)</title><rect x="4.6165%" y="181" width="0.1396%" height="15" fill="rgb(215,215,53)" fg:x="496" fg:w="15"/><text x="4.8665%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="4.6631%" y="165" width="0.0931%" height="15" fill="rgb(223,4,10)" fg:x="501" fg:w="10"/><text x="4.9131%" y="175.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.34%)</title><rect x="4.5607%" y="213" width="0.3351%" height="15" fill="rgb(234,103,6)" fg:x="490" fg:w="36"/><text x="4.8107%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.14%)</title><rect x="4.7561%" y="197" width="0.1396%" height="15" fill="rgb(227,97,0)" fg:x="511" fg:w="15"/><text x="5.0061%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.14%)</title><rect x="4.7561%" y="181" width="0.1396%" height="15" fill="rgb(234,150,53)" fg:x="511" fg:w="15"/><text x="5.0061%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="4.8120%" y="165" width="0.0838%" height="15" fill="rgb(228,201,54)" fg:x="517" fg:w="9"/><text x="5.0620%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="4.8958%" y="213" width="0.0745%" height="15" fill="rgb(222,22,37)" fg:x="526" fg:w="8"/><text x="5.1458%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="4.5514%" y="277" width="0.4375%" height="15" fill="rgb(237,53,32)" fg:x="489" fg:w="47"/><text x="4.8014%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.44%)</title><rect x="4.5514%" y="261" width="0.4375%" height="15" fill="rgb(233,25,53)" fg:x="489" fg:w="47"/><text x="4.8014%" y="271.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.44%)</title><rect x="4.5514%" y="245" width="0.4375%" height="15" fill="rgb(210,40,34)" fg:x="489" fg:w="47"/><text x="4.8014%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.44%)</title><rect x="4.5514%" y="229" width="0.4375%" height="15" fill="rgb(241,220,44)" fg:x="489" fg:w="47"/><text x="4.8014%" y="239.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (2 samples, 0.02%)</title><rect x="4.9702%" y="213" width="0.0186%" height="15" fill="rgb(235,28,35)" fg:x="534" fg:w="2"/><text x="5.2202%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.13%)</title><rect x="5.0074%" y="181" width="0.1303%" height="15" fill="rgb(210,56,17)" fg:x="538" fg:w="14"/><text x="5.2574%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="5.0074%" y="165" width="0.1303%" height="15" fill="rgb(224,130,29)" fg:x="538" fg:w="14"/><text x="5.2574%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="5.0726%" y="149" width="0.0652%" height="15" fill="rgb(235,212,8)" fg:x="545" fg:w="7"/><text x="5.3226%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="5.1191%" y="133" width="0.0186%" height="15" fill="rgb(223,33,50)" fg:x="550" fg:w="2"/><text x="5.3691%" y="143.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.30%)</title><rect x="4.9981%" y="197" width="0.2978%" height="15" fill="rgb(219,149,13)" fg:x="537" fg:w="32"/><text x="5.2481%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.16%)</title><rect x="5.1378%" y="181" width="0.1582%" height="15" fill="rgb(250,156,29)" fg:x="552" fg:w="17"/><text x="5.3878%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.16%)</title><rect x="5.1378%" y="165" width="0.1582%" height="15" fill="rgb(216,193,19)" fg:x="552" fg:w="17"/><text x="5.3878%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="5.2122%" y="149" width="0.0838%" height="15" fill="rgb(216,135,14)" fg:x="560" fg:w="9"/><text x="5.4622%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.07%)</title><rect x="5.2960%" y="197" width="0.0652%" height="15" fill="rgb(241,47,5)" fg:x="569" fg:w="7"/><text x="5.5460%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (193 samples, 1.80%)</title><rect x="3.6392%" y="357" width="1.7964%" height="15" fill="rgb(233,42,35)" fg:x="391" fg:w="193"/><text x="3.8892%" y="367.50">r..</text></g><g><title>rayon_core::registry::in_worker (191 samples, 1.78%)</title><rect x="3.6579%" y="341" width="1.7777%" height="15" fill="rgb(231,13,6)" fg:x="393" fg:w="191"/><text x="3.9079%" y="351.50">r..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (95 samples, 0.88%)</title><rect x="4.5514%" y="325" width="0.8842%" height="15" fill="rgb(207,181,40)" fg:x="489" fg:w="95"/><text x="4.8014%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.88%)</title><rect x="4.5514%" y="309" width="0.8842%" height="15" fill="rgb(254,173,49)" fg:x="489" fg:w="95"/><text x="4.8014%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="4.5514%" y="293" width="0.8842%" height="15" fill="rgb(221,1,38)" fg:x="489" fg:w="95"/><text x="4.8014%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.45%)</title><rect x="4.9888%" y="277" width="0.4468%" height="15" fill="rgb(206,124,46)" fg:x="536" fg:w="48"/><text x="5.2388%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="4.9888%" y="261" width="0.4468%" height="15" fill="rgb(249,21,11)" fg:x="536" fg:w="48"/><text x="5.2388%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="4.9888%" y="245" width="0.4468%" height="15" fill="rgb(222,201,40)" fg:x="536" fg:w="48"/><text x="5.2388%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="4.9888%" y="229" width="0.4468%" height="15" fill="rgb(235,61,29)" fg:x="536" fg:w="48"/><text x="5.2388%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="4.9888%" y="213" width="0.4468%" height="15" fill="rgb(219,207,3)" fg:x="536" fg:w="48"/><text x="5.2388%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (8 samples, 0.07%)</title><rect x="5.3611%" y="197" width="0.0745%" height="15" fill="rgb(222,56,46)" fg:x="576" fg:w="8"/><text x="5.6111%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (12 samples, 0.11%)</title><rect x="5.4821%" y="197" width="0.1117%" height="15" fill="rgb(239,76,54)" fg:x="589" fg:w="12"/><text x="5.7321%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="5.4821%" y="181" width="0.1117%" height="15" fill="rgb(231,124,27)" fg:x="589" fg:w="12"/><text x="5.7321%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="5.5007%" y="165" width="0.0931%" height="15" fill="rgb(249,195,6)" fg:x="591" fg:w="10"/><text x="5.7507%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="5.5566%" y="149" width="0.0372%" height="15" fill="rgb(237,174,47)" fg:x="597" fg:w="4"/><text x="5.8066%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.34%)</title><rect x="5.4635%" y="213" width="0.3351%" height="15" fill="rgb(206,201,31)" fg:x="587" fg:w="36"/><text x="5.7135%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (22 samples, 0.20%)</title><rect x="5.5938%" y="197" width="0.2048%" height="15" fill="rgb(231,57,52)" fg:x="601" fg:w="22"/><text x="5.8438%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (22 samples, 0.20%)</title><rect x="5.5938%" y="181" width="0.2048%" height="15" fill="rgb(248,177,22)" fg:x="601" fg:w="22"/><text x="5.8438%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.15%)</title><rect x="5.6497%" y="165" width="0.1489%" height="15" fill="rgb(215,211,37)" fg:x="607" fg:w="16"/><text x="5.8997%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.05%)</title><rect x="5.7520%" y="149" width="0.0465%" height="15" fill="rgb(241,128,51)" fg:x="618" fg:w="5"/><text x="6.0020%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.05%)</title><rect x="5.7986%" y="213" width="0.0465%" height="15" fill="rgb(227,165,31)" fg:x="623" fg:w="5"/><text x="6.0486%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.43%)</title><rect x="5.4449%" y="277" width="0.4281%" height="15" fill="rgb(228,167,24)" fg:x="585" fg:w="46"/><text x="5.6949%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (46 samples, 0.43%)</title><rect x="5.4449%" y="261" width="0.4281%" height="15" fill="rgb(228,143,12)" fg:x="585" fg:w="46"/><text x="5.6949%" y="271.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.43%)</title><rect x="5.4449%" y="245" width="0.4281%" height="15" fill="rgb(249,149,8)" fg:x="585" fg:w="46"/><text x="5.6949%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.43%)</title><rect x="5.4449%" y="229" width="0.4281%" height="15" fill="rgb(243,35,44)" fg:x="585" fg:w="46"/><text x="5.6949%" y="239.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (3 samples, 0.03%)</title><rect x="5.8451%" y="213" width="0.0279%" height="15" fill="rgb(246,89,9)" fg:x="628" fg:w="3"/><text x="6.0951%" y="223.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="5.8917%" y="165" width="0.0186%" height="15" fill="rgb(233,213,13)" fg:x="633" fg:w="2"/><text x="6.1417%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.13%)</title><rect x="5.8824%" y="181" width="0.1303%" height="15" fill="rgb(233,141,41)" fg:x="632" fg:w="14"/><text x="6.1324%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="5.9103%" y="165" width="0.1024%" height="15" fill="rgb(239,167,4)" fg:x="635" fg:w="11"/><text x="6.1603%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="5.9475%" y="149" width="0.0652%" height="15" fill="rgb(209,217,16)" fg:x="639" fg:w="7"/><text x="6.1975%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="6.0127%" y="181" width="0.1303%" height="15" fill="rgb(219,88,35)" fg:x="646" fg:w="14"/><text x="6.2627%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="6.0127%" y="165" width="0.1303%" height="15" fill="rgb(220,193,23)" fg:x="646" fg:w="14"/><text x="6.2627%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="6.0592%" y="149" width="0.0838%" height="15" fill="rgb(230,90,52)" fg:x="651" fg:w="9"/><text x="6.3092%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.1243%" y="133" width="0.0186%" height="15" fill="rgb(252,106,19)" fg:x="658" fg:w="2"/><text x="6.3743%" y="143.50"></text></g><g><title>criterion::analysis::estimates::stats (30 samples, 0.28%)</title><rect x="5.8730%" y="197" width="0.2792%" height="15" fill="rgb(206,74,20)" fg:x="631" fg:w="30"/><text x="6.1230%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="6.1523%" y="197" width="0.0745%" height="15" fill="rgb(230,138,44)" fg:x="661" fg:w="8"/><text x="6.4023%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.88%)</title><rect x="5.4356%" y="309" width="0.8842%" height="15" fill="rgb(235,182,43)" fg:x="584" fg:w="95"/><text x="5.6856%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (94 samples, 0.87%)</title><rect x="5.4449%" y="293" width="0.8749%" height="15" fill="rgb(242,16,51)" fg:x="585" fg:w="94"/><text x="5.6949%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.45%)</title><rect x="5.8730%" y="277" width="0.4468%" height="15" fill="rgb(248,9,4)" fg:x="631" fg:w="48"/><text x="6.1230%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="5.8730%" y="261" width="0.4468%" height="15" fill="rgb(210,31,22)" fg:x="631" fg:w="48"/><text x="6.1230%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="5.8730%" y="245" width="0.4468%" height="15" fill="rgb(239,54,39)" fg:x="631" fg:w="48"/><text x="6.1230%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="5.8730%" y="229" width="0.4468%" height="15" fill="rgb(230,99,41)" fg:x="631" fg:w="48"/><text x="6.1230%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="5.8730%" y="213" width="0.4468%" height="15" fill="rgb(253,106,12)" fg:x="631" fg:w="48"/><text x="6.1230%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.09%)</title><rect x="6.2267%" y="197" width="0.0931%" height="15" fill="rgb(213,46,41)" fg:x="669" fg:w="10"/><text x="6.4767%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.13%)</title><rect x="6.3570%" y="181" width="0.1303%" height="15" fill="rgb(215,133,35)" fg:x="683" fg:w="14"/><text x="6.6070%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="6.3757%" y="165" width="0.1117%" height="15" fill="rgb(213,28,5)" fg:x="685" fg:w="12"/><text x="6.6257%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="6.4036%" y="149" width="0.0838%" height="15" fill="rgb(215,77,49)" fg:x="688" fg:w="9"/><text x="6.6536%" y="159.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.29%)</title><rect x="6.3291%" y="197" width="0.2885%" height="15" fill="rgb(248,100,22)" fg:x="680" fg:w="31"/><text x="6.5791%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="6.4873%" y="181" width="0.1303%" height="15" fill="rgb(208,67,9)" fg:x="697" fg:w="14"/><text x="6.7373%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="6.4873%" y="165" width="0.1303%" height="15" fill="rgb(219,133,21)" fg:x="697" fg:w="14"/><text x="6.7373%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="6.5525%" y="149" width="0.0652%" height="15" fill="rgb(246,46,29)" fg:x="704" fg:w="7"/><text x="6.8025%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.5990%" y="133" width="0.0186%" height="15" fill="rgb(246,185,52)" fg:x="709" fg:w="2"/><text x="6.8490%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="6.6176%" y="197" width="0.0745%" height="15" fill="rgb(252,136,11)" fg:x="711" fg:w="8"/><text x="6.8676%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.45%)</title><rect x="6.3291%" y="261" width="0.4468%" height="15" fill="rgb(219,138,53)" fg:x="680" fg:w="48"/><text x="6.5791%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.45%)</title><rect x="6.3291%" y="245" width="0.4468%" height="15" fill="rgb(211,51,23)" fg:x="680" fg:w="48"/><text x="6.5791%" y="255.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.45%)</title><rect x="6.3291%" y="229" width="0.4468%" height="15" fill="rgb(247,221,28)" fg:x="680" fg:w="48"/><text x="6.5791%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.45%)</title><rect x="6.3291%" y="213" width="0.4468%" height="15" fill="rgb(251,222,45)" fg:x="680" fg:w="48"/><text x="6.5791%" y="223.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.08%)</title><rect x="6.6921%" y="197" width="0.0838%" height="15" fill="rgb(217,162,53)" fg:x="719" fg:w="9"/><text x="6.9421%" y="207.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.12%)</title><rect x="6.8317%" y="165" width="0.1210%" height="15" fill="rgb(229,93,14)" fg:x="734" fg:w="13"/><text x="7.0817%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="6.8410%" y="149" width="0.1117%" height="15" fill="rgb(209,67,49)" fg:x="735" fg:w="12"/><text x="7.0910%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="6.8503%" y="133" width="0.1024%" height="15" fill="rgb(213,87,29)" fg:x="736" fg:w="11"/><text x="7.1003%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="6.8876%" y="117" width="0.0652%" height="15" fill="rgb(205,151,52)" fg:x="740" fg:w="7"/><text x="7.1376%" y="127.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.29%)</title><rect x="6.7945%" y="181" width="0.2885%" height="15" fill="rgb(253,215,39)" fg:x="730" fg:w="31"/><text x="7.0445%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="6.9527%" y="165" width="0.1303%" height="15" fill="rgb(221,220,41)" fg:x="747" fg:w="14"/><text x="7.2027%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="6.9527%" y="149" width="0.1303%" height="15" fill="rgb(218,133,21)" fg:x="747" fg:w="14"/><text x="7.2027%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="6.9899%" y="133" width="0.0931%" height="15" fill="rgb(221,193,43)" fg:x="751" fg:w="10"/><text x="7.2399%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="7.0644%" y="117" width="0.0186%" height="15" fill="rgb(240,128,52)" fg:x="759" fg:w="2"/><text x="7.3144%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.06%)</title><rect x="7.0830%" y="181" width="0.0558%" height="15" fill="rgb(253,114,12)" fg:x="761" fg:w="6"/><text x="7.3330%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (384 samples, 3.57%)</title><rect x="3.6392%" y="389" width="3.5741%" height="15" fill="rgb(215,223,47)" fg:x="391" fg:w="384"/><text x="3.8892%" y="399.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (384 samples, 3.57%)</title><rect x="3.6392%" y="373" width="3.5741%" height="15" fill="rgb(248,225,23)" fg:x="391" fg:w="384"/><text x="3.8892%" y="383.50">rayo..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (191 samples, 1.78%)</title><rect x="5.4356%" y="357" width="1.7777%" height="15" fill="rgb(250,108,0)" fg:x="584" fg:w="191"/><text x="5.6856%" y="367.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (191 samples, 1.78%)</title><rect x="5.4356%" y="341" width="1.7777%" height="15" fill="rgb(228,208,7)" fg:x="584" fg:w="191"/><text x="5.6856%" y="351.50">r..</text></g><g><title>rayon_core::registry::in_worker (191 samples, 1.78%)</title><rect x="5.4356%" y="325" width="1.7777%" height="15" fill="rgb(244,45,10)" fg:x="584" fg:w="191"/><text x="5.6856%" y="335.50">r..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (96 samples, 0.89%)</title><rect x="6.3198%" y="309" width="0.8935%" height="15" fill="rgb(207,125,25)" fg:x="679" fg:w="96"/><text x="6.5698%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.89%)</title><rect x="6.3198%" y="293" width="0.8935%" height="15" fill="rgb(210,195,18)" fg:x="679" fg:w="96"/><text x="6.5698%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.88%)</title><rect x="6.3291%" y="277" width="0.8842%" height="15" fill="rgb(249,80,12)" fg:x="680" fg:w="95"/><text x="6.5791%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.44%)</title><rect x="6.7759%" y="261" width="0.4375%" height="15" fill="rgb(221,65,9)" fg:x="728" fg:w="47"/><text x="7.0259%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.44%)</title><rect x="6.7759%" y="245" width="0.4375%" height="15" fill="rgb(235,49,36)" fg:x="728" fg:w="47"/><text x="7.0259%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (46 samples, 0.43%)</title><rect x="6.7852%" y="229" width="0.4281%" height="15" fill="rgb(225,32,20)" fg:x="729" fg:w="46"/><text x="7.0352%" y="239.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.43%)</title><rect x="6.7852%" y="213" width="0.4281%" height="15" fill="rgb(215,141,46)" fg:x="729" fg:w="46"/><text x="7.0352%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.43%)</title><rect x="6.7852%" y="197" width="0.4281%" height="15" fill="rgb(250,160,47)" fg:x="729" fg:w="46"/><text x="7.0352%" y="207.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (8 samples, 0.07%)</title><rect x="7.1389%" y="181" width="0.0745%" height="15" fill="rgb(216,222,40)" fg:x="767" fg:w="8"/><text x="7.3889%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="7.2226%" y="325" width="0.0186%" height="15" fill="rgb(234,217,39)" fg:x="776" fg:w="2"/><text x="7.4726%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="7.2226%" y="309" width="0.0186%" height="15" fill="rgb(207,178,40)" fg:x="776" fg:w="2"/><text x="7.4726%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.05%)</title><rect x="7.2226%" y="357" width="0.0465%" height="15" fill="rgb(221,136,13)" fg:x="776" fg:w="5"/><text x="7.4726%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.05%)</title><rect x="7.2226%" y="341" width="0.0465%" height="15" fill="rgb(249,199,10)" fg:x="776" fg:w="5"/><text x="7.4726%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="7.2413%" y="325" width="0.0279%" height="15" fill="rgb(249,222,13)" fg:x="778" fg:w="3"/><text x="7.4913%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="7.2413%" y="309" width="0.0279%" height="15" fill="rgb(244,185,38)" fg:x="778" fg:w="3"/><text x="7.4913%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="7.2413%" y="293" width="0.0279%" height="15" fill="rgb(236,202,9)" fg:x="778" fg:w="3"/><text x="7.4913%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="7.2506%" y="277" width="0.0186%" height="15" fill="rgb(250,229,37)" fg:x="779" fg:w="2"/><text x="7.5006%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="7.2506%" y="261" width="0.0186%" height="15" fill="rgb(206,174,23)" fg:x="779" fg:w="2"/><text x="7.5006%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="7.2506%" y="245" width="0.0186%" height="15" fill="rgb(211,33,43)" fg:x="779" fg:w="2"/><text x="7.5006%" y="255.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (781 samples, 7.27%)</title><rect x="0.0093%" y="405" width="7.2692%" height="15" fill="rgb(245,58,50)" fg:x="1" fg:w="781"/><text x="0.2593%" y="415.50">&lt;rayon_cor..</text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.07%)</title><rect x="7.2133%" y="389" width="0.0652%" height="15" fill="rgb(244,68,36)" fg:x="775" fg:w="7"/><text x="7.4633%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.06%)</title><rect x="7.2226%" y="373" width="0.0558%" height="15" fill="rgb(232,229,15)" fg:x="776" fg:w="6"/><text x="7.4726%" y="383.50"></text></g><g><title>[libc.so.6] (783 samples, 7.29%)</title><rect x="0.0000%" y="549" width="7.2878%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="783"/><text x="0.2500%" y="559.50">[libc.so.6]</text></g><g><title>[libc.so.6] (783 samples, 7.29%)</title><rect x="0.0000%" y="533" width="7.2878%" height="15" fill="rgb(235,160,14)" fg:x="0" fg:w="783"/><text x="0.2500%" y="543.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (783 samples, 7.29%)</title><rect x="0.0000%" y="517" width="7.2878%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="783"/><text x="0.2500%" y="527.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (783 samples, 7.29%)</title><rect x="0.0000%" y="501" width="7.2878%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="783"/><text x="0.2500%" y="511.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (783 samples, 7.29%)</title><rect x="0.0000%" y="485" width="7.2878%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="783"/><text x="0.2500%" y="495.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (783 samples, 7.29%)</title><rect x="0.0000%" y="469" width="7.2878%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="783"/><text x="0.2500%" y="479.50">core::ops:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (782 samples, 7.28%)</title><rect x="0.0093%" y="453" width="7.2785%" height="15" fill="rgb(220,13,46)" fg:x="1" fg:w="782"/><text x="0.2593%" y="463.50">std::sys_c..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (782 samples, 7.28%)</title><rect x="0.0093%" y="437" width="7.2785%" height="15" fill="rgb(239,221,27)" fg:x="1" fg:w="782"/><text x="0.2593%" y="447.50">rayon_core..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (782 samples, 7.28%)</title><rect x="0.0093%" y="421" width="7.2785%" height="15" fill="rgb(222,198,25)" fg:x="1" fg:w="782"/><text x="0.2593%" y="431.50">rayon_core..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.2878%" y="245" width="0.0186%" height="15" fill="rgb(211,99,13)" fg:x="783" fg:w="2"/><text x="7.5378%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.2878%" y="229" width="0.0186%" height="15" fill="rgb(232,111,31)" fg:x="783" fg:w="2"/><text x="7.5378%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="7.2878%" y="213" width="0.0186%" height="15" fill="rgb(245,82,37)" fg:x="783" fg:w="2"/><text x="7.5378%" y="223.50"></text></g><g><title>criterion::analysis::estimates (3 samples, 0.03%)</title><rect x="7.2878%" y="261" width="0.0279%" height="15" fill="rgb(227,149,46)" fg:x="783" fg:w="3"/><text x="7.5378%" y="271.50"></text></g><g><title>criterion::analysis::regression (2 samples, 0.02%)</title><rect x="7.3157%" y="261" width="0.0186%" height="15" fill="rgb(218,36,50)" fg:x="786" fg:w="2"/><text x="7.5657%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,976 samples, 46.31%)</title><rect x="7.3343%" y="245" width="46.3142%" height="15" fill="rgb(226,80,48)" fg:x="788" fg:w="4976"/><text x="7.5843%" y="255.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_..</text></g><g><title>criterion::Bencher::iter (4,976 samples, 46.31%)</title><rect x="7.3343%" y="229" width="46.3142%" height="15" fill="rgb(238,224,15)" fg:x="788" fg:w="4976"/><text x="7.5843%" y="239.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2022::day2::day2_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (4,975 samples, 46.30%)</title><rect x="7.3436%" y="213" width="46.3049%" height="15" fill="rgb(241,136,10)" fg:x="789" fg:w="4975"/><text x="7.5936%" y="223.50">&lt;adventofcode_rust_2022::day2::day2_part2::RunnerStruct as aoc_runner::Runne..</text></g><g><title>adventofcode_rust_2022::day2::part2 (4,975 samples, 46.30%)</title><rect x="7.3436%" y="197" width="46.3049%" height="15" fill="rgb(208,32,45)" fg:x="789" fg:w="4975"/><text x="7.5936%" y="207.50">adventofcode_rust_2022::day2::part2</text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (9,959 samples, 92.69%)</title><rect x="7.2878%" y="293" width="92.6936%" height="15" fill="rgb(207,135,9)" fg:x="783" fg:w="9959"/><text x="7.5378%" y="303.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (9,959 samples, 92.69%)</title><rect x="7.2878%" y="277" width="92.6936%" height="15" fill="rgb(206,86,44)" fg:x="783" fg:w="9959"/><text x="7.5378%" y="287.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (9,954 samples, 92.65%)</title><rect x="7.3343%" y="261" width="92.6471%" height="15" fill="rgb(245,177,15)" fg:x="788" fg:w="9954"/><text x="7.5843%" y="271.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (4,978 samples, 46.33%)</title><rect x="53.6485%" y="245" width="46.3328%" height="15" fill="rgb(206,64,50)" fg:x="5764" fg:w="4978"/><text x="53.8985%" y="255.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_..</text></g><g><title>criterion::Bencher::iter (4,978 samples, 46.33%)</title><rect x="53.6485%" y="229" width="46.3328%" height="15" fill="rgb(234,36,40)" fg:x="5764" fg:w="4978"/><text x="53.8985%" y="239.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2022::day2::day2_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (4,978 samples, 46.33%)</title><rect x="53.6485%" y="213" width="46.3328%" height="15" fill="rgb(213,64,8)" fg:x="5764" fg:w="4978"/><text x="53.8985%" y="223.50">&lt;adventofcode_rust_2022::day2::day2_part2::RunnerStruct as aoc_runner::Runne..</text></g><g><title>adventofcode_rust_2022::day2::part2 (4,977 samples, 46.32%)</title><rect x="53.6579%" y="197" width="46.3235%" height="15" fill="rgb(210,75,36)" fg:x="5765" fg:w="4977"/><text x="53.9079%" y="207.50">adventofcode_rust_2022::day2::part2</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="181" width="0.0186%" height="15" fill="rgb(229,88,21)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="165" width="0.0186%" height="15" fill="rgb(252,204,47)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="149" width="0.0186%" height="15" fill="rgb(208,77,27)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="133" width="0.0186%" height="15" fill="rgb(221,76,26)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="117" width="0.0186%" height="15" fill="rgb(225,139,18)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="101" width="0.0186%" height="15" fill="rgb(230,137,11)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="85" width="0.0186%" height="15" fill="rgb(212,28,1)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="69" width="0.0186%" height="15" fill="rgb(248,164,17)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="53" width="0.0186%" height="15" fill="rgb(222,171,42)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9628%" y="37" width="0.0186%" height="15" fill="rgb(243,84,45)" fg:x="10740" fg:w="2"/><text x="100.2128%" y="47.50"></text></g><g><title>std::panic::catch_unwind (9,960 samples, 92.70%)</title><rect x="7.2878%" y="405" width="92.7029%" height="15" fill="rgb(252,49,23)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="415.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,960 samples, 92.70%)</title><rect x="7.2878%" y="389" width="92.7029%" height="15" fill="rgb(215,19,7)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="399.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,960 samples, 92.70%)</title><rect x="7.2878%" y="373" width="92.7029%" height="15" fill="rgb(238,81,41)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="383.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9,960 samples, 92.70%)</title><rect x="7.2878%" y="357" width="92.7029%" height="15" fill="rgb(210,199,37)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="367.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (9,960 samples, 92.70%)</title><rect x="7.2878%" y="341" width="92.7029%" height="15" fill="rgb(244,192,49)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="351.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,960 samples, 92.70%)</title><rect x="7.2878%" y="325" width="92.7029%" height="15" fill="rgb(226,211,11)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="335.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (9,960 samples, 92.70%)</title><rect x="7.2878%" y="309" width="92.7029%" height="15" fill="rgb(236,162,54)" fg:x="783" fg:w="9960"/><text x="7.5378%" y="319.50">aoc_benchmark::main</text></g><g><title>all (10,744 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(220,229,9)" fg:x="0" fg:w="10744"/><text x="0.2500%" y="591.50"></text></g><g><title>aoc_benchmark-8 (10,744 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(250,87,22)" fg:x="0" fg:w="10744"/><text x="0.2500%" y="575.50">aoc_benchmark-8</text></g><g><title>_start (9,961 samples, 92.71%)</title><rect x="7.2878%" y="549" width="92.7122%" height="15" fill="rgb(239,43,17)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="559.50">_start</text></g><g><title>__libc_start_main (9,961 samples, 92.71%)</title><rect x="7.2878%" y="533" width="92.7122%" height="15" fill="rgb(231,177,25)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="543.50">__libc_start_main</text></g><g><title>[libc.so.6] (9,961 samples, 92.71%)</title><rect x="7.2878%" y="517" width="92.7122%" height="15" fill="rgb(219,179,1)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="527.50">[libc.so.6]</text></g><g><title>main (9,961 samples, 92.71%)</title><rect x="7.2878%" y="501" width="92.7122%" height="15" fill="rgb(238,219,53)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="511.50">main</text></g><g><title>std::rt::lang_start_internal (9,961 samples, 92.71%)</title><rect x="7.2878%" y="485" width="92.7122%" height="15" fill="rgb(232,167,36)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="495.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (9,961 samples, 92.71%)</title><rect x="7.2878%" y="469" width="92.7122%" height="15" fill="rgb(244,19,51)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="479.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,961 samples, 92.71%)</title><rect x="7.2878%" y="453" width="92.7122%" height="15" fill="rgb(224,6,22)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="463.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,961 samples, 92.71%)</title><rect x="7.2878%" y="437" width="92.7122%" height="15" fill="rgb(224,145,5)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="447.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (9,961 samples, 92.71%)</title><rect x="7.2878%" y="421" width="92.7122%" height="15" fill="rgb(234,130,49)" fg:x="783" fg:w="9961"/><text x="7.5378%" y="431.50">std::rt::lang_start_internal::{{closure}}</text></g></svg></svg>