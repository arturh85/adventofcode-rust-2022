<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="565.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="11469"><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (23 samples, 0.20%)</title><rect x="0.0436%" y="149" width="0.2005%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="23"/><text x="0.2936%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.17%)</title><rect x="0.0785%" y="133" width="0.1657%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="19"/><text x="0.3285%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="0.1482%" y="117" width="0.0959%" height="15" fill="rgb(221,193,54)" fg:x="17" fg:w="11"/><text x="0.3982%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="0.2093%" y="101" width="0.0349%" height="15" fill="rgb(248,212,6)" fg:x="24" fg:w="4"/><text x="0.4593%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (38 samples, 0.33%)</title><rect x="0.0174%" y="165" width="0.3313%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="38"/><text x="0.2674%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (12 samples, 0.10%)</title><rect x="0.2441%" y="149" width="0.1046%" height="15" fill="rgb(232,128,0)" fg:x="28" fg:w="12"/><text x="0.4941%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="0.2441%" y="133" width="0.1046%" height="15" fill="rgb(207,160,47)" fg:x="28" fg:w="12"/><text x="0.4941%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="0.2877%" y="117" width="0.0610%" height="15" fill="rgb(228,23,34)" fg:x="33" fg:w="7"/><text x="0.5377%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="0.3488%" y="165" width="0.0610%" height="15" fill="rgb(218,30,26)" fg:x="40" fg:w="7"/><text x="0.5988%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="0.0000%" y="229" width="0.4272%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="49"/><text x="0.2500%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (49 samples, 0.43%)</title><rect x="0.0000%" y="213" width="0.4272%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="49"/><text x="0.2500%" y="223.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.43%)</title><rect x="0.0000%" y="197" width="0.4272%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="49"/><text x="0.2500%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.43%)</title><rect x="0.0000%" y="181" width="0.4272%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="49"/><text x="0.2500%" y="191.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (2 samples, 0.02%)</title><rect x="0.4098%" y="165" width="0.0174%" height="15" fill="rgb(206,188,39)" fg:x="47" fg:w="2"/><text x="0.6598%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.14%)</title><rect x="0.4970%" y="133" width="0.1395%" height="15" fill="rgb(217,207,13)" fg:x="57" fg:w="16"/><text x="0.7470%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="0.4970%" y="117" width="0.1395%" height="15" fill="rgb(231,73,38)" fg:x="57" fg:w="16"/><text x="0.7470%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="0.5319%" y="101" width="0.1046%" height="15" fill="rgb(225,20,46)" fg:x="61" fg:w="12"/><text x="0.7819%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="0.6191%" y="85" width="0.0174%" height="15" fill="rgb(210,31,41)" fg:x="71" fg:w="2"/><text x="0.8691%" y="95.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.30%)</title><rect x="0.4708%" y="149" width="0.2965%" height="15" fill="rgb(221,200,47)" fg:x="54" fg:w="34"/><text x="0.7208%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="0.6365%" y="133" width="0.1308%" height="15" fill="rgb(226,26,5)" fg:x="73" fg:w="15"/><text x="0.8865%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="0.6365%" y="117" width="0.1308%" height="15" fill="rgb(249,33,26)" fg:x="73" fg:w="15"/><text x="0.8865%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="0.6975%" y="101" width="0.0698%" height="15" fill="rgb(235,183,28)" fg:x="80" fg:w="8"/><text x="0.9475%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="0.7673%" y="149" width="0.0349%" height="15" fill="rgb(221,5,38)" fg:x="88" fg:w="4"/><text x="1.0173%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.85%)</title><rect x="0.0000%" y="261" width="0.8458%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="97"/><text x="0.2500%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (97 samples, 0.85%)</title><rect x="0.0000%" y="245" width="0.8458%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="97"/><text x="0.2500%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.42%)</title><rect x="0.4272%" y="229" width="0.4185%" height="15" fill="rgb(249,31,29)" fg:x="49" fg:w="48"/><text x="0.6772%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="0.4272%" y="213" width="0.4185%" height="15" fill="rgb(225,111,53)" fg:x="49" fg:w="48"/><text x="0.6772%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.41%)</title><rect x="0.4360%" y="197" width="0.4098%" height="15" fill="rgb(238,160,17)" fg:x="50" fg:w="47"/><text x="0.6860%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.41%)</title><rect x="0.4360%" y="181" width="0.4098%" height="15" fill="rgb(214,148,48)" fg:x="50" fg:w="47"/><text x="0.6860%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.41%)</title><rect x="0.4360%" y="165" width="0.4098%" height="15" fill="rgb(232,36,49)" fg:x="50" fg:w="47"/><text x="0.6860%" y="175.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.04%)</title><rect x="0.8022%" y="149" width="0.0436%" height="15" fill="rgb(209,103,24)" fg:x="92" fg:w="5"/><text x="1.0522%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.14%)</title><rect x="0.8981%" y="133" width="0.1395%" height="15" fill="rgb(229,88,8)" fg:x="103" fg:w="16"/><text x="1.1481%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="0.8981%" y="117" width="0.1395%" height="15" fill="rgb(213,181,19)" fg:x="103" fg:w="16"/><text x="1.1481%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="0.9329%" y="101" width="0.1046%" height="15" fill="rgb(254,191,54)" fg:x="107" fg:w="12"/><text x="1.1829%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="1.0201%" y="85" width="0.0174%" height="15" fill="rgb(241,83,37)" fg:x="117" fg:w="2"/><text x="1.2701%" y="95.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="1.0376%" y="133" width="0.1308%" height="15" fill="rgb(233,36,39)" fg:x="119" fg:w="15"/><text x="1.2876%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="1.0376%" y="117" width="0.1308%" height="15" fill="rgb(226,3,54)" fg:x="119" fg:w="15"/><text x="1.2876%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="1.0725%" y="101" width="0.0959%" height="15" fill="rgb(245,192,40)" fg:x="123" fg:w="11"/><text x="1.3225%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.31%)</title><rect x="0.8719%" y="149" width="0.3139%" height="15" fill="rgb(238,167,29)" fg:x="100" fg:w="36"/><text x="1.1219%" y="159.50"></text></g><g><title>free (2 samples, 0.02%)</title><rect x="1.1684%" y="133" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="134" fg:w="2"/><text x="1.4184%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="1.1684%" y="117" width="0.0174%" height="15" fill="rgb(231,60,39)" fg:x="134" fg:w="2"/><text x="1.4184%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.05%)</title><rect x="1.1858%" y="149" width="0.0523%" height="15" fill="rgb(208,69,12)" fg:x="136" fg:w="6"/><text x="1.4358%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="0.8458%" y="213" width="0.4185%" height="15" fill="rgb(235,93,37)" fg:x="97" fg:w="48"/><text x="1.0958%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.41%)</title><rect x="0.8545%" y="197" width="0.4098%" height="15" fill="rgb(213,116,39)" fg:x="98" fg:w="47"/><text x="1.1045%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.41%)</title><rect x="0.8545%" y="181" width="0.4098%" height="15" fill="rgb(222,207,29)" fg:x="98" fg:w="47"/><text x="1.1045%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.41%)</title><rect x="0.8545%" y="165" width="0.4098%" height="15" fill="rgb(206,96,30)" fg:x="98" fg:w="47"/><text x="1.1045%" y="175.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (3 samples, 0.03%)</title><rect x="1.2381%" y="149" width="0.0262%" height="15" fill="rgb(218,138,4)" fg:x="142" fg:w="3"/><text x="1.4881%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.12%)</title><rect x="1.2992%" y="117" width="0.1221%" height="15" fill="rgb(250,191,14)" fg:x="149" fg:w="14"/><text x="1.5492%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="1.3079%" y="101" width="0.1133%" height="15" fill="rgb(239,60,40)" fg:x="150" fg:w="13"/><text x="1.5579%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="1.3515%" y="85" width="0.0698%" height="15" fill="rgb(206,27,48)" fg:x="155" fg:w="8"/><text x="1.6015%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="1.3951%" y="69" width="0.0262%" height="15" fill="rgb(225,35,8)" fg:x="160" fg:w="3"/><text x="1.6451%" y="79.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.31%)</title><rect x="1.2730%" y="133" width="0.3052%" height="15" fill="rgb(250,213,24)" fg:x="146" fg:w="35"/><text x="1.5230%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.16%)</title><rect x="1.4212%" y="117" width="0.1569%" height="15" fill="rgb(247,123,22)" fg:x="163" fg:w="18"/><text x="1.6712%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.16%)</title><rect x="1.4212%" y="101" width="0.1569%" height="15" fill="rgb(231,138,38)" fg:x="163" fg:w="18"/><text x="1.6712%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="1.4823%" y="85" width="0.0959%" height="15" fill="rgb(231,145,46)" fg:x="170" fg:w="11"/><text x="1.7323%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="1.5520%" y="69" width="0.0262%" height="15" fill="rgb(251,118,11)" fg:x="178" fg:w="3"/><text x="1.8020%" y="79.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="1.5782%" y="133" width="0.0698%" height="15" fill="rgb(217,147,25)" fg:x="181" fg:w="8"/><text x="1.8282%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (194 samples, 1.69%)</title><rect x="0.0000%" y="293" width="1.6915%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="194"/><text x="0.2500%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (194 samples, 1.69%)</title><rect x="0.0000%" y="277" width="1.6915%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="194"/><text x="0.2500%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (97 samples, 0.85%)</title><rect x="0.8458%" y="261" width="0.8458%" height="15" fill="rgb(227,1,9)" fg:x="97" fg:w="97"/><text x="1.0958%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.85%)</title><rect x="0.8458%" y="245" width="0.8458%" height="15" fill="rgb(248,47,43)" fg:x="97" fg:w="97"/><text x="1.0958%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (97 samples, 0.85%)</title><rect x="0.8458%" y="229" width="0.8458%" height="15" fill="rgb(221,10,30)" fg:x="97" fg:w="97"/><text x="1.0958%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.43%)</title><rect x="1.2643%" y="213" width="0.4272%" height="15" fill="rgb(210,229,1)" fg:x="145" fg:w="49"/><text x="1.5143%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="1.2643%" y="197" width="0.4272%" height="15" fill="rgb(222,148,37)" fg:x="145" fg:w="49"/><text x="1.5143%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (49 samples, 0.43%)</title><rect x="1.2643%" y="181" width="0.4272%" height="15" fill="rgb(234,67,33)" fg:x="145" fg:w="49"/><text x="1.5143%" y="191.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.43%)</title><rect x="1.2643%" y="165" width="0.4272%" height="15" fill="rgb(247,98,35)" fg:x="145" fg:w="49"/><text x="1.5143%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.43%)</title><rect x="1.2643%" y="149" width="0.4272%" height="15" fill="rgb(247,138,52)" fg:x="145" fg:w="49"/><text x="1.5143%" y="159.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.04%)</title><rect x="1.6479%" y="133" width="0.0436%" height="15" fill="rgb(213,79,30)" fg:x="189" fg:w="5"/><text x="1.8979%" y="143.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="1.6915%" y="261" width="0.0174%" height="15" fill="rgb(246,177,23)" fg:x="194" fg:w="2"/><text x="1.9415%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.12%)</title><rect x="1.7177%" y="133" width="0.1221%" height="15" fill="rgb(230,62,27)" fg:x="197" fg:w="14"/><text x="1.9677%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="1.7438%" y="117" width="0.0959%" height="15" fill="rgb(216,154,8)" fg:x="200" fg:w="11"/><text x="1.9938%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="1.7700%" y="101" width="0.0698%" height="15" fill="rgb(244,35,45)" fg:x="203" fg:w="8"/><text x="2.0200%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="1.8136%" y="85" width="0.0262%" height="15" fill="rgb(251,115,12)" fg:x="208" fg:w="3"/><text x="2.0636%" y="95.50"></text></g><g><title>criterion::analysis::estimates::stats (27 samples, 0.24%)</title><rect x="1.7090%" y="149" width="0.2354%" height="15" fill="rgb(240,54,50)" fg:x="196" fg:w="27"/><text x="1.9590%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (12 samples, 0.10%)</title><rect x="1.8397%" y="133" width="0.1046%" height="15" fill="rgb(233,84,52)" fg:x="211" fg:w="12"/><text x="2.0897%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="1.8397%" y="117" width="0.1046%" height="15" fill="rgb(207,117,47)" fg:x="211" fg:w="12"/><text x="2.0897%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="1.8659%" y="101" width="0.0785%" height="15" fill="rgb(249,43,39)" fg:x="214" fg:w="9"/><text x="2.1159%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="1.9269%" y="85" width="0.0174%" height="15" fill="rgb(209,38,44)" fg:x="221" fg:w="2"/><text x="2.1769%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="1.9444%" y="149" width="0.0698%" height="15" fill="rgb(236,212,23)" fg:x="223" fg:w="8"/><text x="2.1944%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="1.7090%" y="213" width="0.4185%" height="15" fill="rgb(242,79,21)" fg:x="196" fg:w="48"/><text x="1.9590%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="1.7090%" y="197" width="0.4185%" height="15" fill="rgb(211,96,35)" fg:x="196" fg:w="48"/><text x="1.9590%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="1.7090%" y="181" width="0.4185%" height="15" fill="rgb(253,215,40)" fg:x="196" fg:w="48"/><text x="1.9590%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="1.7090%" y="165" width="0.4185%" height="15" fill="rgb(211,81,21)" fg:x="196" fg:w="48"/><text x="1.9590%" y="175.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="2.0141%" y="149" width="0.1133%" height="15" fill="rgb(208,190,38)" fg:x="231" fg:w="13"/><text x="2.2641%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.13%)</title><rect x="2.1972%" y="117" width="0.1308%" height="15" fill="rgb(235,213,38)" fg:x="252" fg:w="15"/><text x="2.4472%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="2.2321%" y="101" width="0.0959%" height="15" fill="rgb(237,122,38)" fg:x="256" fg:w="11"/><text x="2.4821%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="2.3106%" y="85" width="0.0174%" height="15" fill="rgb(244,218,35)" fg:x="265" fg:w="2"/><text x="2.5606%" y="95.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.30%)</title><rect x="2.1536%" y="133" width="0.2965%" height="15" fill="rgb(240,68,47)" fg:x="247" fg:w="34"/><text x="2.4036%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.12%)</title><rect x="2.3280%" y="117" width="0.1221%" height="15" fill="rgb(210,16,53)" fg:x="267" fg:w="14"/><text x="2.5780%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.12%)</title><rect x="2.3280%" y="101" width="0.1221%" height="15" fill="rgb(235,124,12)" fg:x="267" fg:w="14"/><text x="2.5780%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="2.3716%" y="85" width="0.0785%" height="15" fill="rgb(224,169,11)" fg:x="272" fg:w="9"/><text x="2.6216%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="2.4326%" y="69" width="0.0174%" height="15" fill="rgb(250,166,2)" fg:x="279" fg:w="2"/><text x="2.6826%" y="79.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.05%)</title><rect x="2.4501%" y="133" width="0.0523%" height="15" fill="rgb(242,216,29)" fg:x="281" fg:w="6"/><text x="2.7001%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.84%)</title><rect x="1.7090%" y="245" width="0.8370%" height="15" fill="rgb(230,116,27)" fg:x="196" fg:w="96"/><text x="1.9590%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.84%)</title><rect x="1.7090%" y="229" width="0.8370%" height="15" fill="rgb(228,99,48)" fg:x="196" fg:w="96"/><text x="1.9590%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.42%)</title><rect x="2.1275%" y="213" width="0.4185%" height="15" fill="rgb(253,11,6)" fg:x="244" fg:w="48"/><text x="2.3775%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="2.1275%" y="197" width="0.4185%" height="15" fill="rgb(247,143,39)" fg:x="244" fg:w="48"/><text x="2.3775%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="2.1275%" y="181" width="0.4185%" height="15" fill="rgb(236,97,10)" fg:x="244" fg:w="48"/><text x="2.3775%" y="191.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="2.1275%" y="165" width="0.4185%" height="15" fill="rgb(233,208,19)" fg:x="244" fg:w="48"/><text x="2.3775%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="2.1275%" y="149" width="0.4185%" height="15" fill="rgb(216,164,2)" fg:x="244" fg:w="48"/><text x="2.3775%" y="159.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.04%)</title><rect x="2.5024%" y="133" width="0.0436%" height="15" fill="rgb(220,129,5)" fg:x="287" fg:w="5"/><text x="2.7524%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (21 samples, 0.18%)</title><rect x="2.5722%" y="117" width="0.1831%" height="15" fill="rgb(242,17,10)" fg:x="295" fg:w="21"/><text x="2.8222%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.17%)</title><rect x="2.5809%" y="101" width="0.1744%" height="15" fill="rgb(242,107,0)" fg:x="296" fg:w="20"/><text x="2.8309%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="2.6593%" y="85" width="0.0959%" height="15" fill="rgb(251,28,31)" fg:x="305" fg:w="11"/><text x="2.9093%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="2.7291%" y="69" width="0.0262%" height="15" fill="rgb(233,223,10)" fg:x="313" fg:w="3"/><text x="2.9791%" y="79.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.31%)</title><rect x="2.5722%" y="133" width="0.3052%" height="15" fill="rgb(215,21,27)" fg:x="295" fg:w="35"/><text x="2.8222%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.12%)</title><rect x="2.7553%" y="117" width="0.1221%" height="15" fill="rgb(232,23,21)" fg:x="316" fg:w="14"/><text x="3.0053%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="2.7727%" y="101" width="0.1046%" height="15" fill="rgb(244,5,23)" fg:x="318" fg:w="12"/><text x="3.0227%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="2.8163%" y="85" width="0.0610%" height="15" fill="rgb(226,81,46)" fg:x="323" fg:w="7"/><text x="3.0663%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.05%)</title><rect x="2.8773%" y="133" width="0.0523%" height="15" fill="rgb(247,70,30)" fg:x="330" fg:w="6"/><text x="3.1273%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="2.5460%" y="197" width="0.4272%" height="15" fill="rgb(212,68,19)" fg:x="292" fg:w="49"/><text x="2.7960%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="2.5547%" y="181" width="0.4185%" height="15" fill="rgb(240,187,13)" fg:x="293" fg:w="48"/><text x="2.8047%" y="191.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="2.5547%" y="165" width="0.4185%" height="15" fill="rgb(223,113,26)" fg:x="293" fg:w="48"/><text x="2.8047%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="2.5547%" y="149" width="0.4185%" height="15" fill="rgb(206,192,2)" fg:x="293" fg:w="48"/><text x="2.8047%" y="159.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.04%)</title><rect x="2.9296%" y="133" width="0.0436%" height="15" fill="rgb(241,108,4)" fg:x="336" fg:w="5"/><text x="3.1796%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.11%)</title><rect x="3.0168%" y="101" width="0.1133%" height="15" fill="rgb(247,173,49)" fg:x="346" fg:w="13"/><text x="3.2668%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="3.0255%" y="85" width="0.1046%" height="15" fill="rgb(224,114,35)" fg:x="347" fg:w="12"/><text x="3.2755%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.04%)</title><rect x="3.0866%" y="69" width="0.0436%" height="15" fill="rgb(245,159,27)" fg:x="354" fg:w="5"/><text x="3.3366%" y="79.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.29%)</title><rect x="2.9820%" y="117" width="0.2877%" height="15" fill="rgb(245,172,44)" fg:x="342" fg:w="33"/><text x="3.2320%" y="127.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.14%)</title><rect x="3.1302%" y="101" width="0.1395%" height="15" fill="rgb(236,23,11)" fg:x="359" fg:w="16"/><text x="3.3802%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="3.1302%" y="85" width="0.1395%" height="15" fill="rgb(205,117,38)" fg:x="359" fg:w="16"/><text x="3.3802%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="3.1651%" y="69" width="0.1046%" height="15" fill="rgb(237,72,25)" fg:x="363" fg:w="12"/><text x="3.4151%" y="79.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="3.2697%" y="117" width="0.0610%" height="15" fill="rgb(244,70,9)" fg:x="375" fg:w="7"/><text x="3.5197%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (388 samples, 3.38%)</title><rect x="0.0000%" y="325" width="3.3830%" height="15" fill="rgb(217,125,39)" fg:x="0" fg:w="388"/><text x="0.2500%" y="335.50">ray..</text></g><g><title>rayon_core::registry::in_worker (388 samples, 3.38%)</title><rect x="0.0000%" y="309" width="3.3830%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="388"/><text x="0.2500%" y="319.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (194 samples, 1.69%)</title><rect x="1.6915%" y="293" width="1.6915%" height="15" fill="rgb(251,123,47)" fg:x="194" fg:w="194"/><text x="1.9415%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (194 samples, 1.69%)</title><rect x="1.6915%" y="277" width="1.6915%" height="15" fill="rgb(221,13,13)" fg:x="194" fg:w="194"/><text x="1.9415%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (192 samples, 1.67%)</title><rect x="1.7090%" y="261" width="1.6741%" height="15" fill="rgb(238,131,9)" fg:x="196" fg:w="192"/><text x="1.9590%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (96 samples, 0.84%)</title><rect x="2.5460%" y="245" width="0.8370%" height="15" fill="rgb(211,50,8)" fg:x="292" fg:w="96"/><text x="2.7960%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.84%)</title><rect x="2.5460%" y="229" width="0.8370%" height="15" fill="rgb(245,182,24)" fg:x="292" fg:w="96"/><text x="2.7960%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.84%)</title><rect x="2.5460%" y="213" width="0.8370%" height="15" fill="rgb(242,14,37)" fg:x="292" fg:w="96"/><text x="2.7960%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.41%)</title><rect x="2.9732%" y="197" width="0.4098%" height="15" fill="rgb(246,228,12)" fg:x="341" fg:w="47"/><text x="3.2232%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.41%)</title><rect x="2.9732%" y="181" width="0.4098%" height="15" fill="rgb(213,55,15)" fg:x="341" fg:w="47"/><text x="3.2232%" y="191.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.41%)</title><rect x="2.9732%" y="165" width="0.4098%" height="15" fill="rgb(209,9,3)" fg:x="341" fg:w="47"/><text x="3.2232%" y="175.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.41%)</title><rect x="2.9732%" y="149" width="0.4098%" height="15" fill="rgb(230,59,30)" fg:x="341" fg:w="47"/><text x="3.2232%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.41%)</title><rect x="2.9732%" y="133" width="0.4098%" height="15" fill="rgb(209,121,21)" fg:x="341" fg:w="47"/><text x="3.2232%" y="143.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (6 samples, 0.05%)</title><rect x="3.3307%" y="117" width="0.0523%" height="15" fill="rgb(220,109,13)" fg:x="382" fg:w="6"/><text x="3.5807%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.3830%" y="293" width="0.0174%" height="15" fill="rgb(232,18,1)" fg:x="388" fg:w="2"/><text x="3.6330%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="3.3830%" y="277" width="0.0174%" height="15" fill="rgb(215,41,42)" fg:x="388" fg:w="2"/><text x="3.6330%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="3.3830%" y="261" width="0.0174%" height="15" fill="rgb(224,123,36)" fg:x="388" fg:w="2"/><text x="3.6330%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.3830%" y="245" width="0.0174%" height="15" fill="rgb(240,125,3)" fg:x="388" fg:w="2"/><text x="3.6330%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="3.4005%" y="293" width="0.0174%" height="15" fill="rgb(205,98,50)" fg:x="390" fg:w="2"/><text x="3.6505%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.4005%" y="277" width="0.0174%" height="15" fill="rgb(205,185,37)" fg:x="390" fg:w="2"/><text x="3.6505%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="3.4005%" y="261" width="0.0174%" height="15" fill="rgb(238,207,15)" fg:x="390" fg:w="2"/><text x="3.6505%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.4005%" y="245" width="0.0174%" height="15" fill="rgb(213,199,42)" fg:x="390" fg:w="2"/><text x="3.6505%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="3.4005%" y="229" width="0.0174%" height="15" fill="rgb(235,201,11)" fg:x="390" fg:w="2"/><text x="3.6505%" y="239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (393 samples, 3.43%)</title><rect x="0.0000%" y="341" width="3.4266%" height="15" fill="rgb(207,46,11)" fg:x="0" fg:w="393"/><text x="0.2500%" y="351.50">&lt;co..</text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.04%)</title><rect x="3.3830%" y="325" width="0.0436%" height="15" fill="rgb(241,35,35)" fg:x="388" fg:w="5"/><text x="3.6330%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.04%)</title><rect x="3.3830%" y="309" width="0.0436%" height="15" fill="rgb(243,32,47)" fg:x="388" fg:w="5"/><text x="3.6330%" y="319.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (8 samples, 0.07%)</title><rect x="3.4877%" y="165" width="0.0698%" height="15" fill="rgb(247,202,23)" fg:x="400" fg:w="8"/><text x="3.7377%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="3.4964%" y="149" width="0.0610%" height="15" fill="rgb(219,102,11)" fg:x="401" fg:w="7"/><text x="3.7464%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="3.5313%" y="133" width="0.0262%" height="15" fill="rgb(243,110,44)" fg:x="405" fg:w="3"/><text x="3.7813%" y="143.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.27%)</title><rect x="3.4789%" y="181" width="0.2703%" height="15" fill="rgb(222,74,54)" fg:x="399" fg:w="31"/><text x="3.7289%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (22 samples, 0.19%)</title><rect x="3.5574%" y="165" width="0.1918%" height="15" fill="rgb(216,99,12)" fg:x="408" fg:w="22"/><text x="3.8074%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.17%)</title><rect x="3.5749%" y="149" width="0.1744%" height="15" fill="rgb(226,22,26)" fg:x="410" fg:w="20"/><text x="3.8249%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="3.6359%" y="133" width="0.1133%" height="15" fill="rgb(217,163,10)" fg:x="417" fg:w="13"/><text x="3.8859%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="3.7318%" y="117" width="0.0174%" height="15" fill="rgb(213,25,53)" fg:x="428" fg:w="2"/><text x="3.9818%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="3.7492%" y="181" width="0.0610%" height="15" fill="rgb(252,105,26)" fg:x="430" fg:w="7"/><text x="3.9992%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="3.4441%" y="245" width="0.4185%" height="15" fill="rgb(220,39,43)" fg:x="395" fg:w="48"/><text x="3.6941%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.41%)</title><rect x="3.4528%" y="229" width="0.4098%" height="15" fill="rgb(229,68,48)" fg:x="396" fg:w="47"/><text x="3.7028%" y="239.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.41%)</title><rect x="3.4528%" y="213" width="0.4098%" height="15" fill="rgb(252,8,32)" fg:x="396" fg:w="47"/><text x="3.7028%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.41%)</title><rect x="3.4528%" y="197" width="0.4098%" height="15" fill="rgb(223,20,43)" fg:x="396" fg:w="47"/><text x="3.7028%" y="207.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (6 samples, 0.05%)</title><rect x="3.8103%" y="181" width="0.0523%" height="15" fill="rgb(229,81,49)" fg:x="437" fg:w="6"/><text x="4.0603%" y="191.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.15%)</title><rect x="3.9149%" y="149" width="0.1482%" height="15" fill="rgb(236,28,36)" fg:x="449" fg:w="17"/><text x="4.1649%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.15%)</title><rect x="3.9149%" y="133" width="0.1482%" height="15" fill="rgb(249,185,26)" fg:x="449" fg:w="17"/><text x="4.1649%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="3.9672%" y="117" width="0.0959%" height="15" fill="rgb(249,174,33)" fg:x="455" fg:w="11"/><text x="4.2172%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="4.0370%" y="101" width="0.0262%" height="15" fill="rgb(233,201,37)" fg:x="463" fg:w="3"/><text x="4.2870%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.30%)</title><rect x="3.8975%" y="165" width="0.2965%" height="15" fill="rgb(221,78,26)" fg:x="447" fg:w="34"/><text x="4.1475%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="4.0631%" y="149" width="0.1308%" height="15" fill="rgb(250,127,30)" fg:x="466" fg:w="15"/><text x="4.3131%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="4.0631%" y="133" width="0.1308%" height="15" fill="rgb(230,49,44)" fg:x="466" fg:w="15"/><text x="4.3131%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="4.0980%" y="117" width="0.0959%" height="15" fill="rgb(229,67,23)" fg:x="470" fg:w="11"/><text x="4.3480%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="4.1765%" y="101" width="0.0174%" height="15" fill="rgb(249,83,47)" fg:x="479" fg:w="2"/><text x="4.4265%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.05%)</title><rect x="4.1939%" y="165" width="0.0523%" height="15" fill="rgb(215,43,3)" fg:x="481" fg:w="6"/><text x="4.4439%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.85%)</title><rect x="3.4353%" y="277" width="0.8458%" height="15" fill="rgb(238,154,13)" fg:x="394" fg:w="97"/><text x="3.6853%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.84%)</title><rect x="3.4441%" y="261" width="0.8370%" height="15" fill="rgb(219,56,2)" fg:x="395" fg:w="96"/><text x="3.6941%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.42%)</title><rect x="3.8626%" y="245" width="0.4185%" height="15" fill="rgb(233,0,4)" fg:x="443" fg:w="48"/><text x="4.1126%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="3.8626%" y="229" width="0.4185%" height="15" fill="rgb(235,30,7)" fg:x="443" fg:w="48"/><text x="4.1126%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="3.8626%" y="213" width="0.4185%" height="15" fill="rgb(250,79,13)" fg:x="443" fg:w="48"/><text x="4.1126%" y="223.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="3.8626%" y="197" width="0.4185%" height="15" fill="rgb(211,146,34)" fg:x="443" fg:w="48"/><text x="4.1126%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="3.8626%" y="181" width="0.4185%" height="15" fill="rgb(228,22,38)" fg:x="443" fg:w="48"/><text x="4.1126%" y="191.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (4 samples, 0.03%)</title><rect x="4.2462%" y="165" width="0.0349%" height="15" fill="rgb(235,168,5)" fg:x="487" fg:w="4"/><text x="4.4962%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.12%)</title><rect x="4.3160%" y="149" width="0.1221%" height="15" fill="rgb(221,155,16)" fg:x="495" fg:w="14"/><text x="4.5660%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="4.3247%" y="133" width="0.1133%" height="15" fill="rgb(215,215,53)" fg:x="496" fg:w="13"/><text x="4.5747%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="4.3770%" y="117" width="0.0610%" height="15" fill="rgb(223,4,10)" fg:x="502" fg:w="7"/><text x="4.6270%" y="127.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.29%)</title><rect x="4.2898%" y="165" width="0.2877%" height="15" fill="rgb(234,103,6)" fg:x="492" fg:w="33"/><text x="4.5398%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.14%)</title><rect x="4.4381%" y="149" width="0.1395%" height="15" fill="rgb(227,97,0)" fg:x="509" fg:w="16"/><text x="4.6881%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="4.4381%" y="133" width="0.1395%" height="15" fill="rgb(234,150,53)" fg:x="509" fg:w="16"/><text x="4.6881%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="4.4904%" y="117" width="0.0872%" height="15" fill="rgb(228,201,54)" fg:x="515" fg:w="10"/><text x="4.7404%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="4.5776%" y="165" width="0.0698%" height="15" fill="rgb(222,22,37)" fg:x="525" fg:w="8"/><text x="4.8276%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="4.2811%" y="229" width="0.4185%" height="15" fill="rgb(237,53,32)" fg:x="491" fg:w="48"/><text x="4.5311%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.41%)</title><rect x="4.2898%" y="213" width="0.4098%" height="15" fill="rgb(233,25,53)" fg:x="492" fg:w="47"/><text x="4.5398%" y="223.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.41%)</title><rect x="4.2898%" y="197" width="0.4098%" height="15" fill="rgb(210,40,34)" fg:x="492" fg:w="47"/><text x="4.5398%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.41%)</title><rect x="4.2898%" y="181" width="0.4098%" height="15" fill="rgb(241,220,44)" fg:x="492" fg:w="47"/><text x="4.5398%" y="191.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (6 samples, 0.05%)</title><rect x="4.6473%" y="165" width="0.0523%" height="15" fill="rgb(235,28,35)" fg:x="533" fg:w="6"/><text x="4.8973%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.11%)</title><rect x="4.7345%" y="133" width="0.1133%" height="15" fill="rgb(210,56,17)" fg:x="543" fg:w="13"/><text x="4.9845%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="4.7432%" y="117" width="0.1046%" height="15" fill="rgb(224,130,29)" fg:x="544" fg:w="12"/><text x="4.9932%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="4.7694%" y="101" width="0.0785%" height="15" fill="rgb(235,212,8)" fg:x="547" fg:w="9"/><text x="5.0194%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="4.8130%" y="85" width="0.0349%" height="15" fill="rgb(223,33,50)" fg:x="552" fg:w="4"/><text x="5.0630%" y="95.50"></text></g><g><title>criterion::analysis::estimates::stats (30 samples, 0.26%)</title><rect x="4.7171%" y="149" width="0.2616%" height="15" fill="rgb(219,149,13)" fg:x="541" fg:w="30"/><text x="4.9671%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="4.8479%" y="133" width="0.1308%" height="15" fill="rgb(250,156,29)" fg:x="556" fg:w="15"/><text x="5.0979%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.12%)</title><rect x="4.8566%" y="117" width="0.1221%" height="15" fill="rgb(216,193,19)" fg:x="557" fg:w="14"/><text x="5.1066%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="4.8827%" y="101" width="0.0959%" height="15" fill="rgb(216,135,14)" fg:x="560" fg:w="11"/><text x="5.1327%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="4.9438%" y="85" width="0.0349%" height="15" fill="rgb(241,47,5)" fg:x="567" fg:w="4"/><text x="5.1938%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="4.9786%" y="149" width="0.0698%" height="15" fill="rgb(233,42,35)" fg:x="571" fg:w="8"/><text x="5.2286%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (194 samples, 1.69%)</title><rect x="3.4353%" y="309" width="1.6915%" height="15" fill="rgb(231,13,6)" fg:x="394" fg:w="194"/><text x="3.6853%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (194 samples, 1.69%)</title><rect x="3.4353%" y="293" width="1.6915%" height="15" fill="rgb(207,181,40)" fg:x="394" fg:w="194"/><text x="3.6853%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (97 samples, 0.85%)</title><rect x="4.2811%" y="277" width="0.8458%" height="15" fill="rgb(254,173,49)" fg:x="491" fg:w="97"/><text x="4.5311%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.85%)</title><rect x="4.2811%" y="261" width="0.8458%" height="15" fill="rgb(221,1,38)" fg:x="491" fg:w="97"/><text x="4.5311%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (97 samples, 0.85%)</title><rect x="4.2811%" y="245" width="0.8458%" height="15" fill="rgb(206,124,46)" fg:x="491" fg:w="97"/><text x="4.5311%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.43%)</title><rect x="4.6996%" y="229" width="0.4272%" height="15" fill="rgb(249,21,11)" fg:x="539" fg:w="49"/><text x="4.9496%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="4.6996%" y="213" width="0.4272%" height="15" fill="rgb(222,201,40)" fg:x="539" fg:w="49"/><text x="4.9496%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (49 samples, 0.43%)</title><rect x="4.6996%" y="197" width="0.4272%" height="15" fill="rgb(235,61,29)" fg:x="539" fg:w="49"/><text x="4.9496%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.43%)</title><rect x="4.6996%" y="181" width="0.4272%" height="15" fill="rgb(219,207,3)" fg:x="539" fg:w="49"/><text x="4.9496%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.43%)</title><rect x="4.6996%" y="165" width="0.4272%" height="15" fill="rgb(222,56,46)" fg:x="539" fg:w="49"/><text x="4.9496%" y="175.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.08%)</title><rect x="5.0484%" y="149" width="0.0785%" height="15" fill="rgb(239,76,54)" fg:x="579" fg:w="9"/><text x="5.2984%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.13%)</title><rect x="5.1966%" y="149" width="0.1308%" height="15" fill="rgb(231,124,27)" fg:x="596" fg:w="15"/><text x="5.4466%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="5.1966%" y="133" width="0.1308%" height="15" fill="rgb(249,195,6)" fg:x="596" fg:w="15"/><text x="5.4466%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="5.2315%" y="117" width="0.0959%" height="15" fill="rgb(237,174,47)" fg:x="600" fg:w="11"/><text x="5.4815%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="5.3100%" y="101" width="0.0174%" height="15" fill="rgb(206,201,31)" fg:x="609" fg:w="2"/><text x="5.5600%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.31%)</title><rect x="5.1792%" y="165" width="0.3139%" height="15" fill="rgb(231,57,52)" fg:x="594" fg:w="36"/><text x="5.4292%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.17%)</title><rect x="5.3274%" y="149" width="0.1657%" height="15" fill="rgb(248,177,22)" fg:x="611" fg:w="19"/><text x="5.5774%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.17%)</title><rect x="5.3274%" y="133" width="0.1657%" height="15" fill="rgb(215,211,37)" fg:x="611" fg:w="19"/><text x="5.5774%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="5.4059%" y="117" width="0.0872%" height="15" fill="rgb(241,128,51)" fg:x="620" fg:w="10"/><text x="5.6559%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="5.4669%" y="101" width="0.0262%" height="15" fill="rgb(227,165,31)" fg:x="627" fg:w="3"/><text x="5.7169%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="5.4931%" y="165" width="0.0349%" height="15" fill="rgb(228,167,24)" fg:x="630" fg:w="4"/><text x="5.7431%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="5.1443%" y="229" width="0.4185%" height="15" fill="rgb(228,143,12)" fg:x="590" fg:w="48"/><text x="5.3943%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="5.1443%" y="213" width="0.4185%" height="15" fill="rgb(249,149,8)" fg:x="590" fg:w="48"/><text x="5.3943%" y="223.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="5.1443%" y="197" width="0.4185%" height="15" fill="rgb(243,35,44)" fg:x="590" fg:w="48"/><text x="5.3943%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="5.1443%" y="181" width="0.4185%" height="15" fill="rgb(246,89,9)" fg:x="590" fg:w="48"/><text x="5.3943%" y="191.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (4 samples, 0.03%)</title><rect x="5.5279%" y="165" width="0.0349%" height="15" fill="rgb(233,213,13)" fg:x="634" fg:w="4"/><text x="5.7779%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.11%)</title><rect x="5.5890%" y="133" width="0.1133%" height="15" fill="rgb(233,141,41)" fg:x="641" fg:w="13"/><text x="5.8390%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="5.5890%" y="117" width="0.1133%" height="15" fill="rgb(239,167,4)" fg:x="641" fg:w="13"/><text x="5.8390%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="5.6413%" y="101" width="0.0610%" height="15" fill="rgb(209,217,16)" fg:x="647" fg:w="7"/><text x="5.8913%" y="111.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.32%)</title><rect x="5.5628%" y="149" width="0.3226%" height="15" fill="rgb(219,88,35)" fg:x="638" fg:w="37"/><text x="5.8128%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (21 samples, 0.18%)</title><rect x="5.7023%" y="133" width="0.1831%" height="15" fill="rgb(220,193,23)" fg:x="654" fg:w="21"/><text x="5.9523%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.18%)</title><rect x="5.7023%" y="117" width="0.1831%" height="15" fill="rgb(230,90,52)" fg:x="654" fg:w="21"/><text x="5.9523%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="5.7808%" y="101" width="0.1046%" height="15" fill="rgb(252,106,19)" fg:x="663" fg:w="12"/><text x="6.0308%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="5.8680%" y="85" width="0.0174%" height="15" fill="rgb(206,74,20)" fg:x="673" fg:w="2"/><text x="6.1180%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="5.8854%" y="149" width="0.0698%" height="15" fill="rgb(230,138,44)" fg:x="675" fg:w="8"/><text x="6.1354%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.85%)</title><rect x="5.1356%" y="261" width="0.8458%" height="15" fill="rgb(235,182,43)" fg:x="589" fg:w="97"/><text x="5.3856%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.84%)</title><rect x="5.1443%" y="245" width="0.8370%" height="15" fill="rgb(242,16,51)" fg:x="590" fg:w="96"/><text x="5.3943%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.42%)</title><rect x="5.5628%" y="229" width="0.4185%" height="15" fill="rgb(248,9,4)" fg:x="638" fg:w="48"/><text x="5.8128%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="5.5628%" y="213" width="0.4185%" height="15" fill="rgb(210,31,22)" fg:x="638" fg:w="48"/><text x="5.8128%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="5.5628%" y="197" width="0.4185%" height="15" fill="rgb(239,54,39)" fg:x="638" fg:w="48"/><text x="5.8128%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="5.5628%" y="181" width="0.4185%" height="15" fill="rgb(230,99,41)" fg:x="638" fg:w="48"/><text x="5.8128%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="5.5628%" y="165" width="0.4185%" height="15" fill="rgb(253,106,12)" fg:x="638" fg:w="48"/><text x="5.8128%" y="175.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (3 samples, 0.03%)</title><rect x="5.9552%" y="149" width="0.0262%" height="15" fill="rgb(213,46,41)" fg:x="683" fg:w="3"/><text x="6.2052%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (20 samples, 0.17%)</title><rect x="6.0075%" y="133" width="0.1744%" height="15" fill="rgb(215,133,35)" fg:x="689" fg:w="20"/><text x="6.2575%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.17%)</title><rect x="6.0075%" y="117" width="0.1744%" height="15" fill="rgb(213,28,5)" fg:x="689" fg:w="20"/><text x="6.2575%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="6.0424%" y="101" width="0.1395%" height="15" fill="rgb(215,77,49)" fg:x="693" fg:w="16"/><text x="6.2924%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.1644%" y="85" width="0.0174%" height="15" fill="rgb(248,100,22)" fg:x="707" fg:w="2"/><text x="6.4144%" y="95.50"></text></g><g><title>criterion::analysis::estimates::stats (38 samples, 0.33%)</title><rect x="5.9988%" y="149" width="0.3313%" height="15" fill="rgb(208,67,9)" fg:x="688" fg:w="38"/><text x="6.2488%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.15%)</title><rect x="6.1819%" y="133" width="0.1482%" height="15" fill="rgb(219,133,21)" fg:x="709" fg:w="17"/><text x="6.4319%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.15%)</title><rect x="6.1819%" y="117" width="0.1482%" height="15" fill="rgb(246,46,29)" fg:x="709" fg:w="17"/><text x="6.4319%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="6.2342%" y="101" width="0.0959%" height="15" fill="rgb(246,185,52)" fg:x="715" fg:w="11"/><text x="6.4842%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.3127%" y="85" width="0.0174%" height="15" fill="rgb(252,136,11)" fg:x="724" fg:w="2"/><text x="6.5627%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="6.3301%" y="149" width="0.0610%" height="15" fill="rgb(219,138,53)" fg:x="726" fg:w="7"/><text x="6.5801%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="5.9813%" y="213" width="0.4185%" height="15" fill="rgb(211,51,23)" fg:x="686" fg:w="48"/><text x="6.2313%" y="223.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="5.9813%" y="197" width="0.4185%" height="15" fill="rgb(247,221,28)" fg:x="686" fg:w="48"/><text x="6.2313%" y="207.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="5.9813%" y="181" width="0.4185%" height="15" fill="rgb(251,222,45)" fg:x="686" fg:w="48"/><text x="6.2313%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="5.9813%" y="165" width="0.4185%" height="15" fill="rgb(217,162,53)" fg:x="686" fg:w="48"/><text x="6.2313%" y="175.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.13%)</title><rect x="6.4347%" y="117" width="0.1308%" height="15" fill="rgb(229,93,14)" fg:x="738" fg:w="15"/><text x="6.6847%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="6.4347%" y="101" width="0.1308%" height="15" fill="rgb(209,67,49)" fg:x="738" fg:w="15"/><text x="6.6847%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="6.4958%" y="85" width="0.0698%" height="15" fill="rgb(213,87,29)" fg:x="745" fg:w="8"/><text x="6.7458%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="6.5306%" y="69" width="0.0349%" height="15" fill="rgb(205,151,52)" fg:x="749" fg:w="4"/><text x="6.7806%" y="79.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.32%)</title><rect x="6.4260%" y="133" width="0.3226%" height="15" fill="rgb(253,215,39)" fg:x="737" fg:w="37"/><text x="6.6760%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (21 samples, 0.18%)</title><rect x="6.5655%" y="117" width="0.1831%" height="15" fill="rgb(221,220,41)" fg:x="753" fg:w="21"/><text x="6.8155%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.18%)</title><rect x="6.5655%" y="101" width="0.1831%" height="15" fill="rgb(218,133,21)" fg:x="753" fg:w="21"/><text x="6.8155%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="6.6702%" y="85" width="0.0785%" height="15" fill="rgb(221,193,43)" fg:x="765" fg:w="9"/><text x="6.9202%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.7312%" y="69" width="0.0174%" height="15" fill="rgb(240,128,52)" fg:x="772" fg:w="2"/><text x="6.9812%" y="79.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.04%)</title><rect x="6.7486%" y="133" width="0.0436%" height="15" fill="rgb(253,114,12)" fg:x="774" fg:w="5"/><text x="6.9986%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (389 samples, 3.39%)</title><rect x="3.4266%" y="341" width="3.3918%" height="15" fill="rgb(215,223,47)" fg:x="393" fg:w="389"/><text x="3.6766%" y="351.50">ray..</text></g><g><title>rayon_core::registry::in_worker (388 samples, 3.38%)</title><rect x="3.4353%" y="325" width="3.3830%" height="15" fill="rgb(248,225,23)" fg:x="394" fg:w="388"/><text x="3.6853%" y="335.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (194 samples, 1.69%)</title><rect x="5.1269%" y="309" width="1.6915%" height="15" fill="rgb(250,108,0)" fg:x="588" fg:w="194"/><text x="5.3769%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (194 samples, 1.69%)</title><rect x="5.1269%" y="293" width="1.6915%" height="15" fill="rgb(228,208,7)" fg:x="588" fg:w="194"/><text x="5.3769%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (193 samples, 1.68%)</title><rect x="5.1356%" y="277" width="1.6828%" height="15" fill="rgb(244,45,10)" fg:x="589" fg:w="193"/><text x="5.3856%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (96 samples, 0.84%)</title><rect x="5.9813%" y="261" width="0.8370%" height="15" fill="rgb(207,125,25)" fg:x="686" fg:w="96"/><text x="6.2313%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.84%)</title><rect x="5.9813%" y="245" width="0.8370%" height="15" fill="rgb(210,195,18)" fg:x="686" fg:w="96"/><text x="6.2313%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.84%)</title><rect x="5.9813%" y="229" width="0.8370%" height="15" fill="rgb(249,80,12)" fg:x="686" fg:w="96"/><text x="6.2313%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.42%)</title><rect x="6.3999%" y="213" width="0.4185%" height="15" fill="rgb(221,65,9)" fg:x="734" fg:w="48"/><text x="6.6499%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.42%)</title><rect x="6.3999%" y="197" width="0.4185%" height="15" fill="rgb(235,49,36)" fg:x="734" fg:w="48"/><text x="6.6499%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (48 samples, 0.42%)</title><rect x="6.3999%" y="181" width="0.4185%" height="15" fill="rgb(225,32,20)" fg:x="734" fg:w="48"/><text x="6.6499%" y="191.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.42%)</title><rect x="6.3999%" y="165" width="0.4185%" height="15" fill="rgb(215,141,46)" fg:x="734" fg:w="48"/><text x="6.6499%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.42%)</title><rect x="6.3999%" y="149" width="0.4185%" height="15" fill="rgb(250,160,47)" fg:x="734" fg:w="48"/><text x="6.6499%" y="159.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (3 samples, 0.03%)</title><rect x="6.7922%" y="133" width="0.0262%" height="15" fill="rgb(216,222,40)" fg:x="779" fg:w="3"/><text x="7.0422%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.8358%" y="277" width="0.0174%" height="15" fill="rgb(234,217,39)" fg:x="784" fg:w="2"/><text x="7.0858%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="6.8358%" y="261" width="0.0174%" height="15" fill="rgb(207,178,40)" fg:x="784" fg:w="2"/><text x="7.0858%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="6.8358%" y="309" width="0.0349%" height="15" fill="rgb(221,136,13)" fg:x="784" fg:w="4"/><text x="7.0858%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="6.8358%" y="293" width="0.0349%" height="15" fill="rgb(249,199,10)" fg:x="784" fg:w="4"/><text x="7.0858%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="6.8533%" y="277" width="0.0174%" height="15" fill="rgb(249,222,13)" fg:x="786" fg:w="2"/><text x="7.1033%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.8533%" y="261" width="0.0174%" height="15" fill="rgb(244,185,38)" fg:x="786" fg:w="2"/><text x="7.1033%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="6.8533%" y="245" width="0.0174%" height="15" fill="rgb(236,202,9)" fg:x="786" fg:w="2"/><text x="7.1033%" y="255.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (789 samples, 6.88%)</title><rect x="0.0000%" y="357" width="6.8794%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="789"/><text x="0.2500%" y="367.50">&lt;rayon_co..</text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="6.8184%" y="341" width="0.0610%" height="15" fill="rgb(206,174,23)" fg:x="782" fg:w="7"/><text x="7.0684%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.04%)</title><rect x="6.8358%" y="325" width="0.0436%" height="15" fill="rgb(211,33,43)" fg:x="784" fg:w="5"/><text x="7.0858%" y="335.50"></text></g><g><title>[libc.so.6] (790 samples, 6.89%)</title><rect x="0.0000%" y="501" width="6.8881%" height="15" fill="rgb(245,58,50)" fg:x="0" fg:w="790"/><text x="0.2500%" y="511.50">[libc.so...</text></g><g><title>[libc.so.6] (790 samples, 6.89%)</title><rect x="0.0000%" y="485" width="6.8881%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="790"/><text x="0.2500%" y="495.50">[libc.so...</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (790 samples, 6.89%)</title><rect x="0.0000%" y="469" width="6.8881%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="790"/><text x="0.2500%" y="479.50">std::sys:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (790 samples, 6.89%)</title><rect x="0.0000%" y="453" width="6.8881%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="790"/><text x="0.2500%" y="463.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (790 samples, 6.89%)</title><rect x="0.0000%" y="437" width="6.8881%" height="15" fill="rgb(235,160,14)" fg:x="0" fg:w="790"/><text x="0.2500%" y="447.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (790 samples, 6.89%)</title><rect x="0.0000%" y="421" width="6.8881%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="790"/><text x="0.2500%" y="431.50">core::ops..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (790 samples, 6.89%)</title><rect x="0.0000%" y="405" width="6.8881%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="790"/><text x="0.2500%" y="415.50">std::sys_..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (790 samples, 6.89%)</title><rect x="0.0000%" y="389" width="6.8881%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="790"/><text x="0.2500%" y="399.50">rayon_cor..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (790 samples, 6.89%)</title><rect x="0.0000%" y="373" width="6.8881%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="790"/><text x="0.2500%" y="383.50">rayon_cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="6.8969%" y="197" width="0.0349%" height="15" fill="rgb(220,13,46)" fg:x="791" fg:w="4"/><text x="7.1469%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="6.8969%" y="181" width="0.0349%" height="15" fill="rgb(239,221,27)" fg:x="791" fg:w="4"/><text x="7.1469%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.03%)</title><rect x="6.8969%" y="165" width="0.0349%" height="15" fill="rgb(222,198,25)" fg:x="791" fg:w="4"/><text x="7.1469%" y="175.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (2 samples, 0.02%)</title><rect x="6.9143%" y="149" width="0.0174%" height="15" fill="rgb(211,99,13)" fg:x="793" fg:w="2"/><text x="7.1643%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (2 samples, 0.02%)</title><rect x="6.9143%" y="133" width="0.0174%" height="15" fill="rgb(232,111,31)" fg:x="793" fg:w="2"/><text x="7.1643%" y="143.50"></text></g><g><title>criterion::analysis::estimates (5 samples, 0.04%)</title><rect x="6.8969%" y="213" width="0.0436%" height="15" fill="rgb(245,82,37)" fg:x="791" fg:w="5"/><text x="7.1469%" y="223.50"></text></g><g><title>criterion::analysis::regression (2 samples, 0.02%)</title><rect x="6.9404%" y="213" width="0.0174%" height="15" fill="rgb(227,149,46)" fg:x="796" fg:w="2"/><text x="7.1904%" y="223.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (2 samples, 0.02%)</title><rect x="6.9404%" y="197" width="0.0174%" height="15" fill="rgb(218,36,50)" fg:x="796" fg:w="2"/><text x="7.1904%" y="207.50"></text></g><g><title>adventofcode_rust_2022::day2::part1 (5,011 samples, 43.69%)</title><rect x="6.9666%" y="149" width="43.6917%" height="15" fill="rgb(226,80,48)" fg:x="799" fg:w="5011"/><text x="7.2166%" y="159.50">adventofcode_rust_2022::day2::part1</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,013 samples, 43.71%)</title><rect x="6.9579%" y="197" width="43.7091%" height="15" fill="rgb(238,224,15)" fg:x="798" fg:w="5013"/><text x="7.2079%" y="207.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::f..</text></g><g><title>criterion::Bencher::iter (5,013 samples, 43.71%)</title><rect x="6.9579%" y="181" width="43.7091%" height="15" fill="rgb(241,136,10)" fg:x="798" fg:w="5013"/><text x="7.2079%" y="191.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2022::day2::day2_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (5,012 samples, 43.70%)</title><rect x="6.9666%" y="165" width="43.7004%" height="15" fill="rgb(208,32,45)" fg:x="799" fg:w="5012"/><text x="7.2166%" y="175.50">&lt;adventofcode_rust_2022::day2::day2_part1::RunnerStruct as aoc_runner::R..</text></g><g><title>all (11,469 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="11469"/><text x="0.2500%" y="543.50"></text></g><g><title>aoc_benchmark-8 (11,469 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="11469"/><text x="0.2500%" y="527.50">aoc_benchmark-8</text></g><g><title>_start (10,679 samples, 93.11%)</title><rect x="6.8881%" y="501" width="93.1119%" height="15" fill="rgb(245,177,15)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="511.50">_start</text></g><g><title>__libc_start_main (10,679 samples, 93.11%)</title><rect x="6.8881%" y="485" width="93.1119%" height="15" fill="rgb(206,64,50)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="495.50">__libc_start_main</text></g><g><title>[libc.so.6] (10,679 samples, 93.11%)</title><rect x="6.8881%" y="469" width="93.1119%" height="15" fill="rgb(234,36,40)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="479.50">[libc.so.6]</text></g><g><title>main (10,679 samples, 93.11%)</title><rect x="6.8881%" y="453" width="93.1119%" height="15" fill="rgb(213,64,8)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="463.50">main</text></g><g><title>std::rt::lang_start_internal (10,679 samples, 93.11%)</title><rect x="6.8881%" y="437" width="93.1119%" height="15" fill="rgb(210,75,36)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="447.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,679 samples, 93.11%)</title><rect x="6.8881%" y="421" width="93.1119%" height="15" fill="rgb(229,88,21)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="431.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,679 samples, 93.11%)</title><rect x="6.8881%" y="405" width="93.1119%" height="15" fill="rgb(252,204,47)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="415.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,679 samples, 93.11%)</title><rect x="6.8881%" y="389" width="93.1119%" height="15" fill="rgb(208,77,27)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="399.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,679 samples, 93.11%)</title><rect x="6.8881%" y="373" width="93.1119%" height="15" fill="rgb(221,76,26)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="383.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (10,679 samples, 93.11%)</title><rect x="6.8881%" y="357" width="93.1119%" height="15" fill="rgb(225,139,18)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="367.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,679 samples, 93.11%)</title><rect x="6.8881%" y="341" width="93.1119%" height="15" fill="rgb(230,137,11)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="351.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,679 samples, 93.11%)</title><rect x="6.8881%" y="325" width="93.1119%" height="15" fill="rgb(212,28,1)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="335.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,679 samples, 93.11%)</title><rect x="6.8881%" y="309" width="93.1119%" height="15" fill="rgb(248,164,17)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="319.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (10,679 samples, 93.11%)</title><rect x="6.8881%" y="293" width="93.1119%" height="15" fill="rgb(222,171,42)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="303.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,679 samples, 93.11%)</title><rect x="6.8881%" y="277" width="93.1119%" height="15" fill="rgb(243,84,45)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="287.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (10,679 samples, 93.11%)</title><rect x="6.8881%" y="261" width="93.1119%" height="15" fill="rgb(252,49,23)" fg:x="790" fg:w="10679"/><text x="7.1381%" y="271.50">aoc_benchmark::main</text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (10,678 samples, 93.10%)</title><rect x="6.8969%" y="245" width="93.1031%" height="15" fill="rgb(215,19,7)" fg:x="791" fg:w="10678"/><text x="7.1469%" y="255.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (10,678 samples, 93.10%)</title><rect x="6.8969%" y="229" width="93.1031%" height="15" fill="rgb(238,81,41)" fg:x="791" fg:w="10678"/><text x="7.1469%" y="239.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (10,671 samples, 93.04%)</title><rect x="6.9579%" y="213" width="93.0421%" height="15" fill="rgb(210,199,37)" fg:x="798" fg:w="10671"/><text x="7.2079%" y="223.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (5,658 samples, 49.33%)</title><rect x="50.6670%" y="197" width="49.3330%" height="15" fill="rgb(244,192,49)" fg:x="5811" fg:w="5658"/><text x="50.9170%" y="207.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up</text></g><g><title>criterion::Bencher::iter (5,658 samples, 49.33%)</title><rect x="50.6670%" y="181" width="49.3330%" height="15" fill="rgb(226,211,11)" fg:x="5811" fg:w="5658"/><text x="50.9170%" y="191.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2022::day2::day2_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (5,656 samples, 49.32%)</title><rect x="50.6845%" y="165" width="49.3155%" height="15" fill="rgb(236,162,54)" fg:x="5813" fg:w="5656"/><text x="50.9345%" y="175.50">&lt;adventofcode_rust_2022::day2::day2_part1::RunnerStruct as aoc_runner::Runner&gt;::b..</text></g><g><title>adventofcode_rust_2022::day2::part1 (5,655 samples, 49.31%)</title><rect x="50.6932%" y="149" width="49.3068%" height="15" fill="rgb(220,229,9)" fg:x="5814" fg:w="5655"/><text x="50.9432%" y="159.50">adventofcode_rust_2022::day2::part1</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="133" width="0.0174%" height="15" fill="rgb(250,87,22)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="117" width="0.0174%" height="15" fill="rgb(239,43,17)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="101" width="0.0174%" height="15" fill="rgb(231,177,25)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="85" width="0.0174%" height="15" fill="rgb(219,179,1)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="69" width="0.0174%" height="15" fill="rgb(238,219,53)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="53" width="0.0174%" height="15" fill="rgb(232,167,36)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.9826%" y="37" width="0.0174%" height="15" fill="rgb(244,19,51)" fg:x="11467" fg:w="2"/><text x="100.2326%" y="47.50"></text></g></svg></svg>